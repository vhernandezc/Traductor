/* The following code was generated by JFlex 1.4.3 on 26/5/22 20:45 */

package translate;
import java_cup.runtime.Symbol;

/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.4.3
 * on 26/5/22 20:45 from the specification file
 * <tt>C:/Users/Carlos Bryan/Documents/NetBeansProjects/Translate/src/translate/LexerCup.flex</tt>
 */
class LexerCup implements java_cup.runtime.Scanner {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0, 0
  };

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = {
     0,  0,  0,  0,  0,  0,  0,  0,  0,  3, 14,  0,  0,  3,  0,  0, 
     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 
     3,  0,  0,  0,  0,  0,  0,  0, 36, 37, 35, 33,  3, 34,  0, 13, 
     2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  0,  0,  0, 32,  0,  0, 
     0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1, 
     1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  0,  1, 
     0, 18, 16, 19, 24,  8,  7, 27, 12,  4, 21,  1,  9, 22,  5, 17, 
    30, 23, 20, 10,  6, 15, 25, 11, 31, 29, 28,  0,  0,  0,  0,  0, 
     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 
     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 
     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 
     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 
     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 
     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 
     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 
     0, 26,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
  };

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\0\1\1\1\2\1\3\1\4\11\2\1\5\14\2"+
    "\1\6\1\7\1\10\1\11\1\1\1\2\1\12\1\13"+
    "\35\2\1\4\24\2\1\0\46\2\1\0\1\14\24\2"+
    "\1\15\42\2\1\0\12\2\1\16\27\2\1\17\1\0"+
    "\37\2\1\20\17\2\1\21\1\0\3\2\1\22\22\2"+
    "\1\0\25\2\1\23\11\2\1\24\12\2\1\25\2\2"+
    "\1\26\22\2\1\0\40\2\1\27\1\2\1\0\31\2"+
    "\1\30\3\2\1\31\22\2\1\32\11\2\1\33\1\2"+
    "\1\0\15\2\1\0\12\2\1\3\10\2\1\34\1\35"+
    "\2\2\1\36\1\37\1\0\1\40\2\2\1\41\3\2"+
    "\1\42\4\2\1\43\14\2\1\44\2\2\1\45\3\2"+
    "\1\46\1\47\11\2\1\50\1\51\3\2\1\0\1\52"+
    "\1\2\1\53\1\54\2\2\1\55\1\2\1\56\11\2"+
    "\1\57\7\2\1\60\1\61\7\2\1\0\5\2\1\62"+
    "\7\2\1\63\3\2\1\64\11\2\1\65\1\2\1\66"+
    "\6\2\1\67\1\2\1\70\1\71\1\72\2\2\1\73"+
    "\3\2\1\74\3\2\1\75\10\2\1\76\1\2\1\77"+
    "\1\2\1\100\1\2\1\101\1\102\1\103\1\2\1\104"+
    "\2\2\1\105\1\2\1\106\2\2\1\0\4\2\1\107"+
    "\1\110\1\111\15\2\1\112\1\113\3\2\1\114\1\2"+
    "\1\115\17\2\1\116\1\117\1\120\1\121\2\2\1\122"+
    "\1\2\1\123\1\2\1\124\1\125\1\2\1\126\2\2"+
    "\1\0\1\127\1\2\1\130\1\2\1\131\1\132\2\2"+
    "\1\133\4\2\1\134\3\2\1\135\1\136\10\2\1\137"+
    "\1\140\1\2\1\141\1\2\1\142\1\143\6\2\1\144"+
    "\1\145\1\2\1\146\12\2\1\147\3\2\1\150\1\2"+
    "\1\151\2\2\1\152\3\2\1\153\1\154\1\2\1\155"+
    "\14\2\1\156\1\2\1\157\1\160\1\161\1\162\1\163"+
    "\1\2\1\164\4\2\1\165\13\2\1\166\4\2\1\167"+
    "\2\2\1\170\1\2\1\171\1\2\1\172\1\173\1\2"+
    "\1\174\1\175\6\2\1\0\1\176\1\2\1\177\1\200"+
    "\1\201\1\2\1\202\1\203\1\2\1\204\1\205\1\2"+
    "\1\206\2\2\1\207\15\2\1\210\1\211\1\2\1\212"+
    "\2\2\1\213\1\214\3\2\1\215\3\2\1\216\1\217"+
    "\3\2\1\220\5\2\1\221\1\222\1\223\2\2\1\224"+
    "\3\2\1\225\1\226\1\227\1\2\1\230\3\2\1\231"+
    "\1\232\1\2\1\233\1\2\1\234\1\2\1\235\2\2"+
    "\1\236\1\237\1\240\1\2\1\241\1\2\1\242\1\243"+
    "\1\2\1\244\1\245\1\0\3\2\1\246\2\2\1\247"+
    "\3\2\1\250\1\251\4\2\1\252\1\253\1\2\1\254"+
    "\2\2\1\255\1\256\1\257\1\260\2\2\1\261\1\2"+
    "\1\262\5\2\1\263\1\264\1\265\1\266\1\2\1\267"+
    "\1\2\1\270\1\271\1\272\2\2\1\273\4\2\1\0"+
    "\1\2\1\274\1\275\1\276\1\277\1\300\4\2\1\301"+
    "\1\302\1\2\1\303\1\2\1\304\1\305\1\2\1\306"+
    "\4\2\1\307\1\2\1\310\1\2\1\311\1\312\1\313"+
    "\1\314\1\315\1\316\1\2\1\317\1\320\1\321\1\322"+
    "\2\2\1\323\1\324\1\325\1\326\1\327\1\330\1\331"+
    "\1\332\1\2\1\333";

  private static int [] zzUnpackAction() {
    int [] result = new int[1045];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\46\0\114\0\162\0\230\0\276\0\344\0\u010a"+
    "\0\u0130\0\u0156\0\u017c\0\u01a2\0\u01c8\0\u01ee\0\u0214\0\u023a"+
    "\0\u0260\0\u0286\0\u02ac\0\u02d2\0\u02f8\0\u031e\0\u0344\0\u036a"+
    "\0\u0390\0\u03b6\0\u03dc\0\46\0\46\0\46\0\46\0\u0402"+
    "\0\u0428\0\114\0\u044e\0\u0474\0\u049a\0\u04c0\0\u04e6\0\u050c"+
    "\0\u0532\0\u0558\0\u057e\0\u05a4\0\u05ca\0\u05f0\0\u0616\0\u063c"+
    "\0\u0662\0\u0688\0\u06ae\0\u06d4\0\u06fa\0\u0720\0\u0746\0\u076c"+
    "\0\u0792\0\u07b8\0\u07de\0\u0804\0\u082a\0\u0850\0\u0876\0\u089c"+
    "\0\u08c2\0\u08e8\0\u090e\0\u0934\0\u095a\0\u0980\0\u09a6\0\u09cc"+
    "\0\u09f2\0\u0a18\0\u0a3e\0\u0a64\0\u0a8a\0\u0ab0\0\u0ad6\0\u0afc"+
    "\0\u0b22\0\u0b48\0\u0b6e\0\u0b94\0\u0bba\0\u0be0\0\u0c06\0\u0c2c"+
    "\0\u0c52\0\u0c78\0\u0c9e\0\u0cc4\0\u0cea\0\u0d10\0\u0d36\0\u0d5c"+
    "\0\u0d82\0\u0da8\0\u0dce\0\u0df4\0\u0e1a\0\u0e40\0\u0e66\0\u0e8c"+
    "\0\u0eb2\0\u0ed8\0\u0efe\0\u0f24\0\u0f4a\0\u0f70\0\u0f96\0\u0fbc"+
    "\0\u0fe2\0\u1008\0\u102e\0\u1054\0\u107a\0\u10a0\0\u10c6\0\u10ec"+
    "\0\u1112\0\u1138\0\u115e\0\u1184\0\u11aa\0\u11d0\0\u11f6\0\u121c"+
    "\0\u1242\0\u1268\0\u128e\0\u12b4\0\u12da\0\u1300\0\u1326\0\u134c"+
    "\0\u1372\0\u1398\0\u13be\0\u13e4\0\u140a\0\u1430\0\u1456\0\u147c"+
    "\0\u14a2\0\u14c8\0\114\0\u14ee\0\u1514\0\u153a\0\u1560\0\u1586"+
    "\0\u15ac\0\u15d2\0\u15f8\0\u161e\0\u1644\0\u166a\0\u1690\0\u16b6"+
    "\0\u16dc\0\u1702\0\u1728\0\u174e\0\u1774\0\u179a\0\u17c0\0\u17e6"+
    "\0\u180c\0\u1832\0\u1858\0\u187e\0\u18a4\0\u18ca\0\u18f0\0\u1916"+
    "\0\u193c\0\u1962\0\u1988\0\u19ae\0\u19d4\0\u19fa\0\u1a20\0\u1a46"+
    "\0\u1a6c\0\u1a92\0\u1ab8\0\u1ade\0\u1b04\0\u1b2a\0\u1b50\0\u1b76"+
    "\0\114\0\u1b9c\0\u1bc2\0\u1be8\0\u1c0e\0\u1c34\0\u1c5a\0\u1c80"+
    "\0\u1ca6\0\u1ccc\0\u1cf2\0\u1d18\0\u1d3e\0\u1d64\0\u1d8a\0\u1db0"+
    "\0\u1dd6\0\u1dfc\0\u1e22\0\u1e48\0\u1e6e\0\u1e94\0\u1eba\0\u1ee0"+
    "\0\46\0\u1f06\0\u1f2c\0\u1f52\0\u1f78\0\u1f9e\0\u1fc4\0\u1fea"+
    "\0\u2010\0\u2036\0\u205c\0\u2082\0\u20a8\0\u20ce\0\u20f4\0\u211a"+
    "\0\u2140\0\u2166\0\u218c\0\u21b2\0\u21d8\0\u21fe\0\u2224\0\u224a"+
    "\0\u2270\0\u2296\0\u22bc\0\u22e2\0\u2308\0\u232e\0\u2354\0\u237a"+
    "\0\u23a0\0\114\0\u23c6\0\u23ec\0\u2412\0\u2438\0\u245e\0\u2484"+
    "\0\u24aa\0\u24d0\0\u24f6\0\u251c\0\u2542\0\u2568\0\u258e\0\u25b4"+
    "\0\u25da\0\114\0\u2600\0\u2626\0\u264c\0\u2672\0\114\0\u2698"+
    "\0\u26be\0\u26e4\0\u270a\0\u2730\0\u2756\0\u277c\0\u27a2\0\u27c8"+
    "\0\u27ee\0\u2814\0\u283a\0\u2860\0\u2886\0\u28ac\0\u28d2\0\u28f8"+
    "\0\u291e\0\u2944\0\u296a\0\u2990\0\u29b6\0\u29dc\0\u2a02\0\u2a28"+
    "\0\u2a4e\0\u2a74\0\u2a9a\0\u2ac0\0\u2ae6\0\u2b0c\0\u2b32\0\u2b58"+
    "\0\u2b7e\0\u2ba4\0\u2bca\0\u2bf0\0\u2c16\0\u2c3c\0\u2c62\0\114"+
    "\0\u2c88\0\u2cae\0\u2cd4\0\u2cfa\0\u2d20\0\u2d46\0\u2d6c\0\u2d92"+
    "\0\u2db8\0\114\0\u2dde\0\u2e04\0\u2e2a\0\u2e50\0\u2e76\0\u2e9c"+
    "\0\u2ec2\0\u2ee8\0\u2f0e\0\u2f34\0\114\0\u2f5a\0\u2f80\0\114"+
    "\0\u2fa6\0\u2fcc\0\u2ff2\0\u3018\0\u303e\0\u3064\0\u308a\0\u30b0"+
    "\0\u30d6\0\u30fc\0\u3122\0\u3148\0\u316e\0\u3194\0\u31ba\0\u31e0"+
    "\0\u3206\0\u322c\0\u3252\0\u3278\0\u329e\0\u32c4\0\u32ea\0\u3310"+
    "\0\u3336\0\u335c\0\u3382\0\u33a8\0\u33ce\0\u33f4\0\u341a\0\u3440"+
    "\0\u3466\0\u348c\0\u34b2\0\u34d8\0\u34fe\0\u3524\0\u354a\0\u3570"+
    "\0\u3596\0\u35bc\0\u35e2\0\u3608\0\u362e\0\u3654\0\u367a\0\u36a0"+
    "\0\u36c6\0\u36ec\0\u3712\0\114\0\u3738\0\u375e\0\u3784\0\u37aa"+
    "\0\u37d0\0\u37f6\0\u381c\0\u3842\0\u3868\0\u388e\0\u38b4\0\u38da"+
    "\0\u3900\0\u3926\0\u394c\0\u3972\0\u3998\0\u39be\0\u39e4\0\u3a0a"+
    "\0\u3a30\0\u3a56\0\u3a7c\0\u3aa2\0\u3ac8\0\u3aee\0\u3b14\0\114"+
    "\0\u3b3a\0\u3b60\0\u3b86\0\114\0\u3bac\0\u3bd2\0\u3bf8\0\u3c1e"+
    "\0\u3c44\0\u3c6a\0\u3c90\0\u3cb6\0\u3cdc\0\u3d02\0\u3d28\0\u3d4e"+
    "\0\u3d74\0\u3d9a\0\u3dc0\0\u3de6\0\u3e0c\0\u3e32\0\114\0\u3e58"+
    "\0\u3e7e\0\u3ea4\0\u3eca\0\u3ef0\0\u3f16\0\u3f3c\0\u3f62\0\u3f88"+
    "\0\114\0\u3fae\0\u3fd4\0\u3ffa\0\u4020\0\u4046\0\u406c\0\u4092"+
    "\0\u40b8\0\u40de\0\u4104\0\u412a\0\u4150\0\u4176\0\u419c\0\u41c2"+
    "\0\u41e8\0\u420e\0\u4234\0\u425a\0\u4280\0\u42a6\0\u42cc\0\u42f2"+
    "\0\u4318\0\u433e\0\u4364\0\46\0\u438a\0\u43b0\0\u43d6\0\u43fc"+
    "\0\u4422\0\u4448\0\u446e\0\u4494\0\114\0\114\0\u44ba\0\u44e0"+
    "\0\114\0\114\0\u4506\0\114\0\u452c\0\u4552\0\114\0\u4578"+
    "\0\u459e\0\u45c4\0\114\0\u45ea\0\u4610\0\u4636\0\u465c\0\114"+
    "\0\u4682\0\u46a8\0\u46ce\0\u46f4\0\u471a\0\u4740\0\u4766\0\u478c"+
    "\0\u47b2\0\u47d8\0\u47fe\0\u4824\0\114\0\u484a\0\u4870\0\114"+
    "\0\u4896\0\u48bc\0\u48e2\0\114\0\114\0\u4908\0\u492e\0\u4954"+
    "\0\u497a\0\u49a0\0\u49c6\0\u49ec\0\u4a12\0\u4a38\0\114\0\114"+
    "\0\u4a5e\0\u4a84\0\u4aaa\0\u4ad0\0\114\0\u4af6\0\114\0\114"+
    "\0\u4b1c\0\u4b42\0\114\0\u4b68\0\114\0\u4b8e\0\u4bb4\0\u4bda"+
    "\0\u4c00\0\u4c26\0\u4c4c\0\u4c72\0\u4c98\0\u4cbe\0\114\0\u4ce4"+
    "\0\u4d0a\0\u4d30\0\u4d56\0\u4d7c\0\u4da2\0\u4dc8\0\114\0\114"+
    "\0\u4dee\0\u4e14\0\u4e3a\0\u4e60\0\u4e86\0\u4eac\0\u4ed2\0\u4ef8"+
    "\0\u4f1e\0\u4f44\0\u4f6a\0\u4f90\0\u4fb6\0\114\0\u4fdc\0\u5002"+
    "\0\u5028\0\u504e\0\u5074\0\u509a\0\u50c0\0\114\0\u50e6\0\u510c"+
    "\0\u5132\0\114\0\u5158\0\u517e\0\u51a4\0\u51ca\0\u51f0\0\u5216"+
    "\0\u523c\0\u5262\0\u5288\0\114\0\u52ae\0\114\0\u52d4\0\u52fa"+
    "\0\u5320\0\u5346\0\u536c\0\u5392\0\114\0\u53b8\0\114\0\114"+
    "\0\114\0\u53de\0\u5404\0\114\0\u542a\0\u5450\0\u5476\0\114"+
    "\0\u549c\0\u54c2\0\u54e8\0\114\0\u550e\0\u5534\0\u555a\0\u5580"+
    "\0\u55a6\0\u55cc\0\u55f2\0\u5618\0\114\0\u563e\0\114\0\u5664"+
    "\0\46\0\u568a\0\114\0\114\0\114\0\u56b0\0\114\0\u56d6"+
    "\0\u56fc\0\114\0\u5722\0\114\0\u5748\0\u576e\0\u5794\0\u57ba"+
    "\0\u57e0\0\u5806\0\u582c\0\114\0\114\0\114\0\u5852\0\u5878"+
    "\0\u589e\0\u58c4\0\u58ea\0\u5910\0\u5936\0\u595c\0\u5982\0\u59a8"+
    "\0\u59ce\0\u59f4\0\u5a1a\0\46\0\114\0\u5a40\0\u5a66\0\u5a8c"+
    "\0\114\0\u5ab2\0\114\0\u5ad8\0\u5afe\0\u5b24\0\u5b4a\0\u5b70"+
    "\0\u5b96\0\u5bbc\0\u5be2\0\u5c08\0\u5c2e\0\u5c54\0\u5c7a\0\u5ca0"+
    "\0\u5cc6\0\u5cec\0\114\0\114\0\114\0\114\0\u5d12\0\u5d38"+
    "\0\114\0\u5d5e\0\114\0\u5d84\0\114\0\114\0\u5daa\0\114"+
    "\0\u5dd0\0\u5df6\0\u5e1c\0\114\0\u5e42\0\114\0\u5e68\0\114"+
    "\0\114\0\u5e8e\0\u5eb4\0\114\0\u5eda\0\u5f00\0\u5f26\0\u5f4c"+
    "\0\114\0\u5f72\0\u5f98\0\u5fbe\0\114\0\114\0\u5fe4\0\u600a"+
    "\0\u6030\0\u6056\0\u607c\0\u60a2\0\u60c8\0\u60ee\0\46\0\114"+
    "\0\u6114\0\114\0\u613a\0\114\0\114\0\u6160\0\u6186\0\u61ac"+
    "\0\u61d2\0\u61f8\0\u621e\0\114\0\114\0\u6244\0\114\0\u626a"+
    "\0\u6290\0\u62b6\0\u62dc\0\u6302\0\u6328\0\u634e\0\u6374\0\u639a"+
    "\0\u63c0\0\114\0\u63e6\0\u640c\0\u6432\0\114\0\u6458\0\114"+
    "\0\u647e\0\u64a4\0\114\0\u64ca\0\u64f0\0\u6516\0\114\0\114"+
    "\0\u653c\0\114\0\u6562\0\u6588\0\u65ae\0\u65d4\0\u65fa\0\u6620"+
    "\0\u6646\0\u666c\0\u6692\0\u66b8\0\u66de\0\u6704\0\114\0\u672a"+
    "\0\114\0\114\0\46\0\114\0\114\0\u6750\0\114\0\u6776"+
    "\0\u679c\0\u67c2\0\u67e8\0\114\0\u680e\0\u6834\0\u685a\0\u6880"+
    "\0\u68a6\0\u68cc\0\u68f2\0\u6918\0\u693e\0\u6964\0\u698a\0\114"+
    "\0\u69b0\0\u69d6\0\u69fc\0\u6a22\0\114\0\u6a48\0\u6a6e\0\114"+
    "\0\u6a94\0\114\0\u6aba\0\114\0\114\0\u6ae0\0\114\0\114"+
    "\0\u6b06\0\u6b2c\0\u6b52\0\u6b78\0\u6b9e\0\u6bc4\0\u6bea\0\114"+
    "\0\u6c10\0\114\0\114\0\114\0\u6c36\0\114\0\114\0\u6c5c"+
    "\0\114\0\114\0\u6c82\0\114\0\u6ca8\0\u6cce\0\114\0\u6cf4"+
    "\0\u6d1a\0\u6d40\0\u6d66\0\u6d8c\0\u6db2\0\u6dd8\0\u6dfe\0\u6e24"+
    "\0\u6e4a\0\u6e70\0\u6e96\0\u6ebc\0\114\0\114\0\u6ee2\0\114"+
    "\0\u6f08\0\u6f2e\0\114\0\114\0\u6f54\0\u6f7a\0\u6fa0\0\114"+
    "\0\u6fc6\0\u6fec\0\u7012\0\114\0\114\0\u7038\0\u705e\0\u7084"+
    "\0\114\0\u70aa\0\u70d0\0\u70f6\0\u711c\0\u7142\0\114\0\114"+
    "\0\114\0\u7168\0\u718e\0\114\0\u71b4\0\u71da\0\u7200\0\114"+
    "\0\114\0\114\0\u7226\0\114\0\u724c\0\u7272\0\u7298\0\114"+
    "\0\114\0\u72be\0\114\0\u72e4\0\114\0\u730a\0\114\0\u7330"+
    "\0\u7356\0\114\0\114\0\114\0\u737c\0\114\0\u73a2\0\114"+
    "\0\114\0\u73c8\0\114\0\114\0\u73ee\0\u7414\0\u743a\0\u7460"+
    "\0\114\0\u7486\0\u74ac\0\114\0\u74d2\0\u74f8\0\u751e\0\114"+
    "\0\114\0\u7544\0\u756a\0\u7590\0\u75b6\0\114\0\114\0\u75dc"+
    "\0\114\0\u7602\0\u7628\0\114\0\114\0\114\0\114\0\u764e"+
    "\0\u7674\0\114\0\u769a\0\114\0\u76c0\0\u76e6\0\u770c\0\u7732"+
    "\0\u7758\0\114\0\114\0\114\0\114\0\u777e\0\114\0\u77a4"+
    "\0\114\0\114\0\114\0\u77ca\0\u77f0\0\114\0\u7816\0\u783c"+
    "\0\u7862\0\u7888\0\u78ae\0\u78d4\0\114\0\114\0\114\0\114"+
    "\0\114\0\u78fa\0\u7920\0\u7946\0\u796c\0\114\0\114\0\u7992"+
    "\0\114\0\u79b8\0\114\0\114\0\u79de\0\114\0\u7a04\0\u7a2a"+
    "\0\u7a50\0\u7a76\0\114\0\u7a9c\0\114\0\u7ac2\0\114\0\114"+
    "\0\114\0\114\0\46\0\114\0\u7ae8\0\114\0\114\0\114"+
    "\0\114\0\u7b0e\0\u7b34\0\114\0\114\0\114\0\114\0\114"+
    "\0\114\0\114\0\114\0\u7b5a\0\114";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[1045];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11"+
    "\1\12\1\13\1\14\1\15\1\16\1\17\1\5\1\3"+
    "\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27"+
    "\1\30\1\31\1\2\1\32\2\3\1\33\1\3\1\34"+
    "\1\35\1\36\1\37\1\40\1\2\47\0\2\3\1\0"+
    "\11\3\2\0\13\3\1\0\5\3\10\0\1\4\46\0"+
    "\1\5\12\0\1\5\30\0\2\3\1\0\1\3\1\41"+
    "\1\3\1\42\5\3\2\0\5\3\1\43\1\3\1\44"+
    "\3\3\1\0\5\3\7\0\2\3\1\0\4\3\1\45"+
    "\4\3\2\0\2\3\1\46\10\3\1\0\5\3\7\0"+
    "\2\3\1\0\4\3\1\47\4\3\2\0\2\3\1\50"+
    "\1\51\1\3\1\52\5\3\1\0\5\3\7\0\2\3"+
    "\1\0\1\53\3\3\1\54\4\3\2\0\1\55\12\3"+
    "\1\0\5\3\7\0\2\3\1\0\1\3\1\56\3\3"+
    "\1\57\1\60\2\3\2\0\7\3\1\61\1\3\1\62"+
    "\1\3\1\0\4\3\1\63\7\0\2\3\1\0\1\64"+
    "\3\3\1\65\1\66\3\3\2\0\1\67\2\3\1\70"+
    "\7\3\1\0\5\3\7\0\2\3\1\0\1\71\3\3"+
    "\1\72\4\3\2\0\1\73\1\3\1\74\1\75\7\3"+
    "\1\0\5\3\7\0\2\3\1\0\10\3\1\76\2\0"+
    "\13\3\1\0\5\3\7\0\2\3\1\0\11\3\2\0"+
    "\1\77\2\3\1\100\7\3\1\0\5\3\23\0\1\101"+
    "\31\0\2\3\1\0\4\3\1\102\1\103\3\3\2\0"+
    "\3\3\1\104\7\3\1\0\5\3\7\0\2\3\1\0"+
    "\1\105\2\3\1\106\1\3\1\107\1\110\2\3\2\0"+
    "\4\3\1\111\1\112\5\3\1\0\5\3\7\0\2\3"+
    "\1\0\1\3\1\113\1\114\1\115\1\3\1\116\1\117"+
    "\2\3\2\0\1\3\1\120\2\3\1\121\1\122\1\123"+
    "\1\124\2\3\1\125\1\126\1\127\1\3\1\130\1\131"+
    "\1\3\7\0\2\3\1\0\4\3\1\132\4\3\2\0"+
    "\2\3\1\133\1\134\1\3\1\135\5\3\1\0\5\3"+
    "\7\0\2\3\1\0\1\136\3\3\1\137\4\3\2\0"+
    "\1\140\1\3\1\141\1\142\7\3\1\0\5\3\7\0"+
    "\2\3\1\0\11\3\2\0\1\143\1\3\1\144\10\3"+
    "\1\0\5\3\7\0\2\3\1\0\1\145\3\3\1\146"+
    "\4\3\2\0\2\3\1\147\1\150\7\3\1\0\5\3"+
    "\7\0\2\3\1\0\11\3\2\0\1\151\12\3\1\0"+
    "\5\3\7\0\2\3\1\0\1\152\3\3\1\153\4\3"+
    "\2\0\1\154\1\3\1\155\1\156\7\3\1\0\5\3"+
    "\7\0\2\3\1\0\1\157\3\3\1\160\4\3\2\0"+
    "\2\3\1\161\1\162\7\3\1\0\5\3\7\0\2\3"+
    "\1\0\1\163\3\3\1\164\4\3\2\0\1\165\1\3"+
    "\1\166\1\167\1\3\1\170\5\3\1\0\5\3\7\0"+
    "\2\3\1\0\4\3\1\171\4\3\2\0\2\3\1\172"+
    "\1\173\1\3\1\174\5\3\1\0\5\3\50\0\1\175"+
    "\4\0\2\3\1\0\2\3\1\176\6\3\2\0\4\3"+
    "\1\177\3\3\1\200\1\201\1\3\1\0\5\3\7\0"+
    "\2\3\1\0\11\3\2\0\5\3\1\202\5\3\1\0"+
    "\5\3\7\0\2\3\1\0\11\3\2\0\3\3\1\203"+
    "\7\3\1\0\5\3\7\0\2\3\1\0\11\3\2\0"+
    "\4\3\1\204\6\3\1\0\5\3\7\0\2\3\1\0"+
    "\11\3\2\0\12\3\1\205\1\0\5\3\7\0\2\3"+
    "\1\0\1\3\1\206\7\3\2\0\5\3\1\207\1\3"+
    "\1\210\3\3\1\0\5\3\7\0\2\3\1\0\11\3"+
    "\2\0\5\3\1\211\1\3\1\212\3\3\1\0\5\3"+
    "\7\0\2\3\1\0\11\3\2\0\4\3\1\213\1\214"+
    "\5\3\1\0\5\3\7\0\2\3\1\0\1\215\10\3"+
    "\2\0\3\3\1\216\7\3\1\0\5\3\7\0\2\3"+
    "\1\0\1\3\1\217\7\3\2\0\3\3\1\220\7\3"+
    "\1\0\5\3\7\0\2\3\1\0\5\3\1\221\3\3"+
    "\2\0\1\3\1\222\1\223\10\3\1\0\5\3\7\0"+
    "\2\3\1\0\2\3\1\224\6\3\2\0\13\3\1\0"+
    "\5\3\7\0\2\3\1\0\2\3\1\225\1\226\1\227"+
    "\4\3\2\0\4\3\1\230\6\3\1\0\5\3\7\0"+
    "\2\3\1\0\6\3\1\231\2\3\2\0\13\3\1\0"+
    "\5\3\7\0\2\3\1\0\2\3\1\232\6\3\2\0"+
    "\4\3\1\233\6\3\1\0\3\3\1\234\1\3\7\0"+
    "\2\3\1\0\11\3\2\0\2\3\1\235\10\3\1\0"+
    "\3\3\1\236\1\3\7\0\2\3\1\0\11\3\2\0"+
    "\1\237\12\3\1\0\5\3\7\0\2\3\1\0\11\3"+
    "\2\0\13\3\1\0\3\3\1\240\1\3\7\0\2\3"+
    "\1\0\6\3\1\241\2\3\2\0\11\3\1\242\1\3"+
    "\1\0\1\243\4\3\7\0\2\3\1\0\4\3\1\244"+
    "\4\3\2\0\6\3\1\245\4\3\1\0\5\3\7\0"+
    "\2\3\1\0\4\3\1\246\4\3\2\0\3\3\1\247"+
    "\7\3\1\0\5\3\7\0\2\3\1\0\1\3\1\250"+
    "\7\3\2\0\13\3\1\0\5\3\7\0\2\3\1\0"+
    "\11\3\2\0\5\3\1\251\5\3\1\0\5\3\7\0"+
    "\2\3\1\0\1\3\1\252\7\3\2\0\13\3\1\0"+
    "\1\253\4\3\7\0\2\3\1\0\1\3\1\254\7\3"+
    "\2\0\7\3\1\255\1\3\1\256\1\3\1\0\1\257"+
    "\2\3\1\260\1\3\7\0\2\3\1\0\11\3\2\0"+
    "\3\3\1\261\1\262\6\3\1\0\5\3\7\0\2\3"+
    "\1\0\5\3\1\263\1\264\2\3\2\0\4\3\1\265"+
    "\6\3\1\266\5\3\7\0\2\3\1\0\11\3\2\0"+
    "\1\3\1\267\11\3\1\0\5\3\7\0\2\3\1\0"+
    "\1\270\10\3\2\0\13\3\1\0\5\3\7\0\2\3"+
    "\1\0\4\3\1\271\4\3\2\0\7\3\1\272\3\3"+
    "\1\0\5\3\7\0\2\3\1\0\11\3\2\0\1\3"+
    "\1\273\2\3\1\274\2\3\1\275\3\3\1\0\5\3"+
    "\6\0\16\101\1\0\27\101\1\0\2\3\1\0\11\3"+
    "\2\0\1\3\1\276\11\3\1\0\5\3\7\0\2\3"+
    "\1\0\11\3\2\0\3\3\1\277\7\3\1\0\5\3"+
    "\7\0\2\3\1\0\1\300\10\3\2\0\13\3\1\0"+
    "\5\3\7\0\2\3\1\0\11\3\2\0\5\3\1\301"+
    "\5\3\1\0\5\3\7\0\2\3\1\0\11\3\2\0"+
    "\5\3\1\302\5\3\1\0\5\3\7\0\2\3\1\0"+
    "\11\3\2\0\12\3\1\303\1\0\5\3\7\0\2\3"+
    "\1\0\11\3\2\0\4\3\1\304\6\3\1\0\5\3"+
    "\7\0\2\3\1\0\2\3\1\305\6\3\2\0\13\3"+
    "\1\0\5\3\7\0\2\3\1\0\11\3\2\0\13\3"+
    "\1\0\1\306\4\3\7\0\2\3\1\0\1\307\5\3"+
    "\1\310\2\3\2\0\4\3\1\311\6\3\1\0\5\3"+
    "\7\0\2\3\1\0\4\3\1\312\4\3\2\0\5\3"+
    "\1\313\5\3\1\0\5\3\7\0\2\3\1\0\1\314"+
    "\10\3\2\0\13\3\1\0\5\3\7\0\2\3\1\0"+
    "\4\3\1\315\4\3\2\0\13\3\1\0\5\3\7\0"+
    "\2\3\1\0\11\3\2\0\13\3\1\0\3\3\1\316"+
    "\1\3\7\0\2\3\1\0\11\3\2\0\1\317\4\3"+
    "\1\320\5\3\1\0\5\3\7\0\2\3\1\0\4\3"+
    "\1\321\4\3\2\0\13\3\1\0\5\3\7\0\2\3"+
    "\1\0\2\3\1\322\6\3\2\0\5\3\1\323\5\3"+
    "\1\0\5\3\7\0\2\3\1\0\11\3\2\0\1\324"+
    "\12\3\1\0\5\3\7\0\2\3\1\0\1\325\10\3"+
    "\2\0\1\3\1\326\1\3\1\327\7\3\1\0\5\3"+
    "\7\0\2\3\1\0\4\3\1\330\4\3\2\0\13\3"+
    "\1\0\5\3\27\0\1\331\1\332\24\0\2\3\1\0"+
    "\11\3\2\0\2\3\1\333\2\3\1\334\5\3\1\0"+
    "\5\3\7\0\2\3\1\0\11\3\2\0\1\335\12\3"+
    "\1\0\5\3\7\0\2\3\1\0\11\3\2\0\5\3"+
    "\1\336\5\3\1\0\5\3\7\0\2\3\1\0\5\3"+
    "\1\337\3\3\2\0\5\3\1\340\5\3\1\0\5\3"+
    "\7\0\2\3\1\0\1\3\1\341\7\3\2\0\5\3"+
    "\1\342\1\3\1\343\3\3\1\0\5\3\7\0\2\3"+
    "\1\0\1\3\1\344\3\3\1\345\3\3\2\0\1\346"+
    "\4\3\1\347\1\3\1\350\3\3\1\0\5\3\7\0"+
    "\2\3\1\0\4\3\1\351\4\3\2\0\13\3\1\0"+
    "\5\3\7\0\2\3\1\0\11\3\2\0\4\3\1\352"+
    "\6\3\1\0\5\3\7\0\2\3\1\0\11\3\2\0"+
    "\1\353\3\3\1\354\6\3\1\0\3\3\1\355\1\3"+
    "\7\0\2\3\1\0\11\3\2\0\11\3\1\356\1\3"+
    "\1\0\5\3\7\0\2\3\1\0\11\3\2\0\7\3"+
    "\1\357\3\3\1\0\5\3\7\0\2\3\1\0\11\3"+
    "\2\0\11\3\1\360\1\3\1\0\5\3\7\0\2\3"+
    "\1\0\1\3\1\361\2\3\1\362\1\363\3\3\2\0"+
    "\13\3\1\0\1\364\4\3\7\0\2\3\1\0\11\3"+
    "\2\0\12\3\1\365\1\0\5\3\7\0\2\3\1\0"+
    "\1\3\1\366\2\3\1\367\4\3\2\0\5\3\1\370"+
    "\1\3\1\371\3\3\1\0\5\3\7\0\2\3\1\0"+
    "\6\3\1\372\2\3\2\0\13\3\1\0\5\3\7\0"+
    "\2\3\1\0\5\3\1\373\1\374\2\3\2\0\12\3"+
    "\1\375\1\0\5\3\7\0\2\3\1\0\1\3\1\376"+
    "\7\3\2\0\5\3\1\377\5\3\1\0\2\3\1\u0100"+
    "\2\3\7\0\2\3\1\0\1\u0101\3\3\1\u0102\4\3"+
    "\2\0\13\3\1\0\5\3\7\0\2\3\1\0\11\3"+
    "\2\0\1\3\1\u0103\2\3\1\u0104\6\3\1\0\5\3"+
    "\7\0\2\3\1\0\6\3\1\u0105\2\3\2\0\4\3"+
    "\1\u0106\1\3\1\u0107\4\3\1\0\5\3\7\0\2\3"+
    "\1\0\11\3\2\0\5\3\1\u0108\5\3\1\0\5\3"+
    "\7\0\2\3\1\0\11\3\2\0\7\3\1\u0109\3\3"+
    "\1\0\5\3\7\0\2\3\1\0\11\3\2\0\5\3"+
    "\1\u010a\5\3\1\u010b\5\3\7\0\2\3\1\0\4\3"+
    "\1\u010c\4\3\2\0\12\3\1\u010d\1\0\5\3\7\0"+
    "\2\3\1\0\1\3\1\u010e\7\3\2\0\5\3\1\u010f"+
    "\5\3\1\0\5\3\7\0\2\3\1\0\5\3\1\u0110"+
    "\3\3\2\0\13\3\1\0\5\3\7\0\2\3\1\0"+
    "\5\3\1\u0111\3\3\2\0\13\3\1\0\5\3\7\0"+
    "\2\3\1\0\11\3\2\0\5\3\1\u0112\5\3\1\0"+
    "\5\3\7\0\2\3\1\0\1\3\1\u0113\7\3\2\0"+
    "\13\3\1\0\5\3\7\0\2\3\1\0\6\3\1\u0114"+
    "\2\3\2\0\3\3\1\u0115\7\3\1\0\5\3\7\0"+
    "\2\3\1\0\5\3\1\u0116\3\3\2\0\13\3\1\0"+
    "\5\3\7\0\2\3\1\0\1\3\1\u0117\4\3\1\u0118"+
    "\2\3\2\0\13\3\1\0\5\3\7\0\2\3\1\0"+
    "\11\3\2\0\1\u0119\12\3\1\0\5\3\7\0\2\3"+
    "\1\0\1\3\1\u011a\4\3\1\u011b\2\3\2\0\5\3"+
    "\1\u011c\5\3\1\0\5\3\7\0\2\3\1\0\1\3"+
    "\1\u011d\7\3\2\0\13\3\1\0\5\3\7\0\2\3"+
    "\1\0\11\3\2\0\5\3\1\u011e\5\3\1\0\1\u011f"+
    "\4\3\7\0\2\3\1\0\4\3\1\u0120\4\3\2\0"+
    "\2\3\1\u0121\10\3\1\0\5\3\10\0\1\u0122\44\0"+
    "\2\3\1\0\4\3\1\u0123\4\3\2\0\13\3\1\0"+
    "\5\3\7\0\2\3\1\0\5\3\1\u0124\3\3\2\0"+
    "\13\3\1\0\5\3\7\0\2\3\1\0\11\3\2\0"+
    "\1\u0125\12\3\1\0\5\3\7\0\2\3\1\0\1\u0126"+
    "\10\3\2\0\13\3\1\0\5\3\7\0\2\3\1\0"+
    "\1\u0127\10\3\2\0\13\3\1\0\5\3\7\0\2\3"+
    "\1\0\11\3\2\0\13\3\1\0\1\u0128\4\3\7\0"+
    "\2\3\1\0\4\3\1\u0129\4\3\2\0\13\3\1\0"+
    "\5\3\7\0\2\3\1\0\1\u012a\10\3\2\0\13\3"+
    "\1\0\5\3\7\0\2\3\1\0\4\3\1\u012b\4\3"+
    "\2\0\13\3\1\0\5\3\7\0\2\3\1\0\11\3"+
    "\2\0\4\3\1\u012c\2\3\1\u012d\3\3\1\0\5\3"+
    "\7\0\2\3\1\0\11\3\2\0\13\3\1\0\3\3"+
    "\1\u012e\1\3\7\0\2\3\1\0\11\3\2\0\13\3"+
    "\1\0\3\3\1\u012f\1\3\7\0\2\3\1\0\11\3"+
    "\2\0\3\3\1\u0130\7\3\1\0\5\3\7\0\2\3"+
    "\1\0\11\3\2\0\3\3\1\u0131\7\3\1\0\5\3"+
    "\7\0\2\3\1\0\11\3\2\0\11\3\1\u0132\1\3"+
    "\1\0\5\3\7\0\2\3\1\0\6\3\1\u0133\2\3"+
    "\2\0\13\3\1\0\5\3\7\0\2\3\1\0\1\3"+
    "\1\u0134\2\3\1\u0135\4\3\2\0\1\3\1\u0136\10\3"+
    "\1\u0137\1\0\5\3\7\0\2\3\1\0\11\3\2\0"+
    "\2\3\1\u0138\10\3\1\0\5\3\7\0\2\3\1\0"+
    "\11\3\2\0\1\3\1\u0139\11\3\1\0\5\3\7\0"+
    "\2\3\1\0\1\u013a\10\3\2\0\13\3\1\0\5\3"+
    "\7\0\2\3\1\0\11\3\2\0\5\3\1\u013b\5\3"+
    "\1\0\5\3\7\0\2\3\1\0\11\3\2\0\1\3"+
    "\1\u013c\11\3\1\0\5\3\7\0\2\3\1\0\11\3"+
    "\2\0\5\3\1\u013d\5\3\1\0\5\3\7\0\2\3"+
    "\1\0\11\3\2\0\3\3\1\u013e\7\3\1\0\5\3"+
    "\7\0\2\3\1\0\11\3\2\0\5\3\1\u013f\5\3"+
    "\1\0\5\3\7\0\2\3\1\0\11\3\2\0\2\3"+
    "\1\u0140\1\u0141\7\3\1\0\5\3\7\0\2\3\1\0"+
    "\4\3\1\u0142\4\3\2\0\13\3\1\0\5\3\7\0"+
    "\2\3\1\0\11\3\2\0\1\u0143\12\3\1\0\5\3"+
    "\7\0\2\3\1\0\11\3\2\0\1\u0144\1\3\1\u0145"+
    "\2\3\1\u0146\5\3\1\0\5\3\7\0\2\3\1\0"+
    "\4\3\1\u0147\4\3\2\0\13\3\1\0\5\3\7\0"+
    "\2\3\1\0\11\3\2\0\4\3\1\u0148\6\3\1\0"+
    "\5\3\7\0\2\3\1\0\4\3\1\u0149\4\3\2\0"+
    "\13\3\1\0\5\3\7\0\2\3\1\0\11\3\2\0"+
    "\4\3\1\u014a\6\3\1\0\5\3\7\0\2\3\1\0"+
    "\5\3\1\u014b\3\3\2\0\13\3\1\0\5\3\7\0"+
    "\2\3\1\0\2\3\1\u014c\6\3\2\0\2\3\1\u014d"+
    "\10\3\1\0\5\3\7\0\2\3\1\0\4\3\1\u014e"+
    "\4\3\2\0\13\3\1\0\5\3\7\0\2\3\1\0"+
    "\4\3\1\u014f\4\3\2\0\13\3\1\0\5\3\7\0"+
    "\2\3\1\0\11\3\2\0\5\3\1\u0150\5\3\1\0"+
    "\5\3\7\0\2\3\1\0\11\3\2\0\2\3\1\u0151"+
    "\10\3\1\0\5\3\7\0\2\3\1\0\1\3\1\u0152"+
    "\7\3\2\0\12\3\1\u0153\1\0\5\3\7\0\2\3"+
    "\1\0\11\3\2\0\7\3\1\u0154\3\3\1\0\5\3"+
    "\7\0\2\3\1\0\4\3\1\u0155\4\3\2\0\13\3"+
    "\1\0\5\3\7\0\2\3\1\0\11\3\2\0\13\3"+
    "\1\0\1\u0156\4\3\7\0\2\3\1\0\11\3\2\0"+
    "\4\3\1\u0157\6\3\1\0\5\3\7\0\2\3\1\0"+
    "\1\3\1\u0158\7\3\2\0\13\3\1\0\5\3\7\0"+
    "\2\3\1\0\2\3\1\u0159\6\3\2\0\13\3\1\0"+
    "\5\3\7\0\2\3\1\0\11\3\2\0\3\3\1\u015a"+
    "\7\3\1\0\5\3\7\0\2\3\1\0\1\u015b\10\3"+
    "\2\0\13\3\1\0\5\3\7\0\2\3\1\0\11\3"+
    "\2\0\1\u015c\12\3\1\0\5\3\7\0\2\3\1\0"+
    "\2\3\1\u015d\6\3\2\0\13\3\1\0\5\3\7\0"+
    "\2\3\1\0\11\3\2\0\12\3\1\u015e\1\0\5\3"+
    "\7\0\2\3\1\0\1\u015f\10\3\2\0\13\3\1\0"+
    "\5\3\7\0\2\3\1\0\1\u0160\10\3\2\0\13\3"+
    "\1\0\5\3\7\0\2\3\1\0\2\3\1\u0161\6\3"+
    "\2\0\13\3\1\0\5\3\7\0\2\3\1\0\1\u0162"+
    "\10\3\2\0\13\3\1\0\5\3\27\0\1\u0163\25\0"+
    "\2\3\1\0\4\3\1\u0164\4\3\2\0\3\3\1\u0165"+
    "\7\3\1\0\5\3\7\0\2\3\1\0\5\3\1\u0166"+
    "\3\3\2\0\13\3\1\0\5\3\7\0\2\3\1\0"+
    "\11\3\2\0\4\3\1\u0167\6\3\1\0\5\3\7\0"+
    "\2\3\1\0\1\u0168\10\3\2\0\13\3\1\0\5\3"+
    "\7\0\2\3\1\0\5\3\1\u0169\3\3\2\0\13\3"+
    "\1\0\5\3\7\0\2\3\1\0\4\3\1\u016a\4\3"+
    "\2\0\13\3\1\0\5\3\7\0\2\3\1\0\11\3"+
    "\2\0\1\3\1\u016b\11\3\1\0\5\3\7\0\2\3"+
    "\1\0\4\3\1\u016c\4\3\2\0\13\3\1\0\5\3"+
    "\7\0\2\3\1\0\1\3\1\u016d\7\3\2\0\13\3"+
    "\1\0\5\3\7\0\2\3\1\0\5\3\1\u016e\3\3"+
    "\2\0\13\3\1\0\5\3\7\0\2\3\1\0\4\3"+
    "\1\u016f\4\3\2\0\13\3\1\0\5\3\7\0\2\3"+
    "\1\0\1\u0170\10\3\2\0\13\3\1\0\5\3\7\0"+
    "\2\3\1\0\11\3\2\0\1\u0171\12\3\1\0\5\3"+
    "\7\0\2\3\1\0\11\3\2\0\1\u0172\12\3\1\0"+
    "\5\3\7\0\2\3\1\0\11\3\2\0\1\u0173\12\3"+
    "\1\0\5\3\7\0\2\3\1\0\11\3\2\0\7\3"+
    "\1\u0174\3\3\1\0\5\3\7\0\2\3\1\0\1\u0175"+
    "\10\3\2\0\13\3\1\0\5\3\7\0\2\3\1\0"+
    "\10\3\1\u0176\2\0\13\3\1\0\5\3\7\0\2\3"+
    "\1\0\1\3\1\u0177\7\3\2\0\13\3\1\0\5\3"+
    "\7\0\2\3\1\0\11\3\2\0\3\3\1\u0178\7\3"+
    "\1\0\5\3\7\0\2\3\1\0\5\3\1\u0179\3\3"+
    "\2\0\13\3\1\0\5\3\7\0\2\3\1\0\11\3"+
    "\2\0\13\3\1\0\1\u017a\4\3\7\0\2\3\1\0"+
    "\4\3\1\u017b\4\3\2\0\13\3\1\0\5\3\7\0"+
    "\2\3\1\0\11\3\2\0\5\3\1\u017c\5\3\1\0"+
    "\5\3\7\0\2\3\1\0\1\u017d\10\3\2\0\13\3"+
    "\1\0\5\3\7\0\2\3\1\0\11\3\2\0\13\3"+
    "\1\0\3\3\1\u017e\1\3\7\0\2\3\1\0\1\u017f"+
    "\10\3\2\0\13\3\1\0\5\3\7\0\2\3\1\0"+
    "\11\3\2\0\2\3\1\u0180\10\3\1\0\5\3\7\0"+
    "\2\3\1\0\6\3\1\u0181\2\3\2\0\13\3\1\0"+
    "\5\3\7\0\2\3\1\0\11\3\2\0\13\3\1\0"+
    "\1\u0182\4\3\7\0\2\3\1\0\1\u0183\10\3\2\0"+
    "\13\3\1\0\5\3\7\0\2\3\1\0\11\3\2\0"+
    "\5\3\1\u0184\5\3\1\0\5\3\7\0\2\3\1\0"+
    "\11\3\2\0\5\3\1\u0185\5\3\1\0\5\3\36\0"+
    "\1\u0186\16\0\2\3\1\0\6\3\1\u0187\2\3\2\0"+
    "\13\3\1\0\5\3\7\0\2\3\1\0\11\3\2\0"+
    "\3\3\1\u0188\7\3\1\0\5\3\7\0\2\3\1\0"+
    "\11\3\2\0\11\3\1\u0189\1\3\1\0\5\3\7\0"+
    "\2\3\1\0\4\3\1\u018a\4\3\2\0\13\3\1\0"+
    "\5\3\7\0\2\3\1\0\11\3\2\0\2\3\1\u018b"+
    "\10\3\1\0\5\3\7\0\2\3\1\0\11\3\2\0"+
    "\4\3\1\u018c\1\u018d\5\3\1\0\5\3\7\0\2\3"+
    "\1\0\3\3\1\u018e\2\3\1\u018f\2\3\2\0\11\3"+
    "\1\u0190\1\3\1\0\5\3\7\0\2\3\1\0\2\3"+
    "\1\u0191\6\3\2\0\5\3\1\u0192\5\3\1\0\5\3"+
    "\7\0\2\3\1\0\4\3\1\u0193\4\3\2\0\2\3"+
    "\1\u0194\10\3\1\0\3\3\1\u0195\1\3\7\0\2\3"+
    "\1\0\6\3\1\u0196\2\3\2\0\4\3\1\u0197\6\3"+
    "\1\0\5\3\7\0\2\3\1\0\11\3\2\0\7\3"+
    "\1\u0198\3\3\1\0\5\3\7\0\2\3\1\0\2\3"+
    "\1\u0199\6\3\2\0\13\3\1\0\5\3\7\0\2\3"+
    "\1\0\1\u019a\10\3\2\0\13\3\1\0\5\3\7\0"+
    "\2\3\1\0\1\u019b\10\3\2\0\1\3\1\u019c\11\3"+
    "\1\0\5\3\7\0\2\3\1\0\4\3\1\u019d\4\3"+
    "\2\0\3\3\1\u019e\1\u019f\6\3\1\0\5\3\7\0"+
    "\2\3\1\0\11\3\2\0\2\3\1\u01a0\10\3\1\0"+
    "\5\3\7\0\2\3\1\0\1\3\1\u01a1\7\3\2\0"+
    "\13\3\1\0\5\3\7\0\2\3\1\0\11\3\2\0"+
    "\2\3\1\u01a2\10\3\1\0\5\3\7\0\2\3\1\0"+
    "\11\3\2\0\3\3\1\u01a3\7\3\1\0\5\3\7\0"+
    "\2\3\1\0\11\3\2\0\2\3\1\u01a4\10\3\1\0"+
    "\5\3\7\0\2\3\1\0\11\3\2\0\13\3\1\0"+
    "\3\3\1\u01a5\1\3\7\0\2\3\1\0\1\u01a6\10\3"+
    "\2\0\13\3\1\0\5\3\7\0\2\3\1\0\1\u01a7"+
    "\10\3\2\0\13\3\1\0\5\3\7\0\2\3\1\0"+
    "\11\3\2\0\12\3\1\u01a8\1\0\5\3\7\0\2\3"+
    "\1\0\1\u01a9\10\3\2\0\13\3\1\0\5\3\7\0"+
    "\2\3\1\0\11\3\2\0\3\3\1\u01aa\7\3\1\0"+
    "\5\3\7\0\2\3\1\0\4\3\1\u01ab\4\3\2\0"+
    "\13\3\1\0\5\3\7\0\2\3\1\0\11\3\2\0"+
    "\1\u01ac\12\3\1\0\5\3\7\0\2\3\1\0\11\3"+
    "\2\0\5\3\1\u01ad\5\3\1\0\5\3\7\0\2\3"+
    "\1\0\11\3\2\0\3\3\1\u01ae\7\3\1\0\5\3"+
    "\7\0\2\3\1\0\11\3\2\0\3\3\1\u01af\7\3"+
    "\1\0\5\3\7\0\2\3\1\0\4\3\1\u01b0\4\3"+
    "\2\0\13\3\1\0\5\3\7\0\2\3\1\0\2\3"+
    "\1\u01b1\6\3\2\0\13\3\1\0\5\3\7\0\2\3"+
    "\1\0\4\3\1\u01b2\4\3\2\0\13\3\1\0\5\3"+
    "\7\0\2\3\1\0\2\3\1\u01b3\6\3\2\0\11\3"+
    "\1\u01b4\1\3\1\0\5\3\7\0\2\3\1\0\2\3"+
    "\1\u01b5\6\3\2\0\13\3\1\0\1\3\1\u01b6\3\3"+
    "\7\0\2\3\1\0\11\3\2\0\2\3\1\u01b7\10\3"+
    "\1\0\5\3\7\0\2\3\1\0\6\3\1\u01b8\2\3"+
    "\2\0\13\3\1\0\5\3\7\0\2\3\1\0\11\3"+
    "\2\0\5\3\1\u01b9\3\3\1\u01ba\1\3\1\0\5\3"+
    "\7\0\2\3\1\0\11\3\2\0\1\u01bb\12\3\1\0"+
    "\5\3\7\0\2\3\1\0\1\u01bc\10\3\2\0\13\3"+
    "\1\0\5\3\7\0\2\3\1\0\11\3\2\0\3\3"+
    "\1\u01bd\7\3\1\0\3\3\1\u01be\1\3\7\0\2\3"+
    "\1\0\1\u01bf\10\3\2\0\13\3\1\0\5\3\7\0"+
    "\2\3\1\0\11\3\2\0\3\3\1\u01c0\7\3\1\0"+
    "\5\3\7\0\2\3\1\0\11\3\2\0\2\3\1\u01c1"+
    "\10\3\1\0\5\3\7\0\2\3\1\0\1\u01c2\10\3"+
    "\2\0\13\3\1\0\5\3\30\0\1\u01c3\24\0\2\3"+
    "\1\0\11\3\2\0\5\3\1\u01c4\5\3\1\0\5\3"+
    "\7\0\2\3\1\0\1\u01c5\10\3\2\0\13\3\1\0"+
    "\5\3\7\0\2\3\1\0\1\u01c6\10\3\2\0\13\3"+
    "\1\0\5\3\7\0\2\3\1\0\11\3\2\0\3\3"+
    "\1\u01c7\7\3\1\0\5\3\7\0\2\3\1\0\1\u01c8"+
    "\10\3\2\0\13\3\1\0\5\3\7\0\2\3\1\0"+
    "\11\3\2\0\3\3\1\u01c9\7\3\1\0\5\3\7\0"+
    "\2\3\1\0\4\3\1\u01ca\4\3\2\0\13\3\1\0"+
    "\5\3\7\0\2\3\1\0\2\3\1\u01cb\6\3\2\0"+
    "\13\3\1\0\5\3\7\0\2\3\1\0\11\3\2\0"+
    "\13\3\1\0\3\3\1\u01cc\1\3\7\0\2\3\1\0"+
    "\11\3\2\0\13\3\1\0\3\3\1\u01cd\1\3\7\0"+
    "\2\3\1\0\11\3\2\0\3\3\1\u01ce\7\3\1\0"+
    "\5\3\7\0\2\3\1\0\2\3\1\u01cf\6\3\2\0"+
    "\13\3\1\0\5\3\7\0\2\3\1\0\4\3\1\u01d0"+
    "\4\3\2\0\13\3\1\u01d1\5\3\7\0\2\3\1\0"+
    "\6\3\1\u01d2\2\3\2\0\13\3\1\0\5\3\7\0"+
    "\2\3\1\0\11\3\2\0\3\3\1\u01d3\7\3\1\0"+
    "\5\3\7\0\2\3\1\0\11\3\2\0\7\3\1\u01d4"+
    "\1\3\1\u01d5\1\3\1\0\5\3\7\0\2\3\1\0"+
    "\4\3\1\u01d6\4\3\2\0\13\3\1\0\5\3\7\0"+
    "\2\3\1\0\11\3\2\0\3\3\1\u01d7\7\3\1\0"+
    "\5\3\7\0\2\3\1\0\11\3\2\0\3\3\1\u01d8"+
    "\7\3\1\0\5\3\7\0\2\3\1\0\11\3\2\0"+
    "\4\3\1\u01d9\6\3\1\0\1\u01da\4\3\7\0\2\3"+
    "\1\0\11\3\2\0\12\3\1\u01db\1\0\5\3\10\0"+
    "\1\u0122\42\0\1\u01dc\1\0\2\3\1\0\1\3\1\u01dd"+
    "\7\3\2\0\13\3\1\0\5\3\7\0\2\3\1\0"+
    "\11\3\2\0\1\u01de\12\3\1\0\5\3\7\0\2\3"+
    "\1\0\1\u01df\10\3\2\0\13\3\1\0\5\3\7\0"+
    "\2\3\1\0\11\3\2\0\13\3\1\0\1\u01e0\4\3"+
    "\7\0\2\3\1\0\2\3\1\u01e1\6\3\2\0\13\3"+
    "\1\0\5\3\7\0\2\3\1\0\1\u01e2\10\3\2\0"+
    "\13\3\1\0\5\3\7\0\2\3\1\0\6\3\1\u01e3"+
    "\2\3\2\0\13\3\1\0\5\3\7\0\2\3\1\0"+
    "\4\3\1\u01e4\4\3\2\0\13\3\1\0\5\3\7\0"+
    "\2\3\1\0\11\3\2\0\5\3\1\u01e5\5\3\1\0"+
    "\5\3\7\0\2\3\1\0\11\3\2\0\2\3\1\u01e6"+
    "\10\3\1\0\5\3\7\0\2\3\1\0\1\u01e7\10\3"+
    "\2\0\13\3\1\0\5\3\7\0\2\3\1\0\11\3"+
    "\2\0\5\3\1\u01e8\5\3\1\0\5\3\7\0\2\3"+
    "\1\0\4\3\1\u01e9\4\3\2\0\13\3\1\0\5\3"+
    "\7\0\2\3\1\0\11\3\2\0\5\3\1\u01ea\5\3"+
    "\1\0\5\3\7\0\2\3\1\0\11\3\2\0\13\3"+
    "\1\u01eb\5\3\7\0\2\3\1\0\4\3\1\u01ec\4\3"+
    "\2\0\13\3\1\0\5\3\7\0\2\3\1\0\2\3"+
    "\1\u01ed\6\3\2\0\13\3\1\0\5\3\7\0\2\3"+
    "\1\0\11\3\2\0\10\3\1\u01ee\2\3\1\0\5\3"+
    "\7\0\2\3\1\0\11\3\2\0\5\3\1\u01ef\5\3"+
    "\1\0\5\3\7\0\2\3\1\0\11\3\2\0\3\3"+
    "\1\u01f0\7\3\1\0\5\3\7\0\2\3\1\0\1\u01f1"+
    "\10\3\2\0\13\3\1\0\5\3\7\0\2\3\1\0"+
    "\5\3\1\u01f2\3\3\2\0\13\3\1\0\5\3\7\0"+
    "\2\3\1\0\11\3\2\0\13\3\1\0\1\3\1\u01f3"+
    "\3\3\7\0\2\3\1\0\4\3\1\u01f4\4\3\2\0"+
    "\13\3\1\0\5\3\7\0\2\3\1\0\11\3\2\0"+
    "\2\3\1\u01f5\10\3\1\0\5\3\7\0\2\3\1\0"+
    "\4\3\1\u01f6\4\3\2\0\13\3\1\0\5\3\7\0"+
    "\2\3\1\0\11\3\2\0\11\3\1\u01f7\1\3\1\0"+
    "\5\3\7\0\2\3\1\0\11\3\2\0\2\3\1\u01f8"+
    "\10\3\1\0\5\3\7\0\2\3\1\0\1\3\1\u01f9"+
    "\7\3\2\0\13\3\1\0\5\3\7\0\2\3\1\0"+
    "\1\3\1\u01fa\7\3\2\0\6\3\1\u01fb\4\3\1\0"+
    "\5\3\7\0\2\3\1\0\11\3\2\0\13\3\1\0"+
    "\3\3\1\u01fc\1\3\7\0\2\3\1\0\11\3\2\0"+
    "\4\3\1\u01fd\6\3\1\0\5\3\7\0\2\3\1\0"+
    "\11\3\2\0\13\3\1\0\1\u01fe\4\3\7\0\2\3"+
    "\1\0\1\u01ff\10\3\2\0\13\3\1\0\5\3\7\0"+
    "\2\3\1\0\11\3\2\0\5\3\1\u0200\5\3\1\0"+
    "\5\3\7\0\2\3\1\0\1\u0201\10\3\2\0\13\3"+
    "\1\0\5\3\7\0\2\3\1\0\11\3\2\0\13\3"+
    "\1\0\1\3\1\u0202\3\3\7\0\2\3\1\0\11\3"+
    "\2\0\3\3\1\u0203\7\3\1\0\5\3\7\0\2\3"+
    "\1\0\1\u0204\10\3\2\0\13\3\1\0\5\3\7\0"+
    "\2\3\1\0\11\3\2\0\2\3\1\u0205\10\3\1\0"+
    "\5\3\7\0\2\3\1\0\11\3\2\0\5\3\1\u0206"+
    "\5\3\1\0\5\3\7\0\2\3\1\0\11\3\2\0"+
    "\5\3\1\u0207\5\3\1\0\5\3\7\0\2\3\1\0"+
    "\6\3\1\u0208\2\3\2\0\13\3\1\0\5\3\7\0"+
    "\2\3\1\0\11\3\2\0\3\3\1\u0209\7\3\1\0"+
    "\5\3\7\0\2\3\1\0\11\3\2\0\3\3\1\u020a"+
    "\7\3\1\0\5\3\7\0\2\3\1\0\11\3\2\0"+
    "\3\3\1\u020b\7\3\1\0\5\3\7\0\2\3\1\0"+
    "\6\3\1\u020c\2\3\2\0\13\3\1\0\5\3\7\0"+
    "\2\3\1\0\11\3\2\0\2\3\1\u020d\10\3\1\0"+
    "\5\3\7\0\2\3\1\0\4\3\1\u020e\4\3\2\0"+
    "\13\3\1\0\5\3\7\0\2\3\1\0\1\u020f\10\3"+
    "\2\0\13\3\1\0\5\3\7\0\2\3\1\0\1\u0210"+
    "\10\3\2\0\3\3\1\u0211\7\3\1\0\5\3\7\0"+
    "\2\3\1\0\1\3\1\u0212\7\3\2\0\13\3\1\0"+
    "\5\3\7\0\2\3\1\0\4\3\1\u0213\4\3\2\0"+
    "\13\3\1\0\5\3\7\0\2\3\1\0\1\u0214\10\3"+
    "\2\0\5\3\1\u0215\5\3\1\0\5\3\7\0\2\3"+
    "\1\0\1\u0216\10\3\2\0\13\3\1\0\5\3\7\0"+
    "\2\3\1\0\4\3\1\u0217\4\3\2\0\13\3\1\0"+
    "\5\3\7\0\2\3\1\0\11\3\2\0\2\3\1\u0218"+
    "\10\3\1\0\5\3\7\0\2\3\1\0\11\3\2\0"+
    "\11\3\1\u0219\1\3\1\0\5\3\7\0\2\3\1\0"+
    "\4\3\1\u021a\4\3\2\0\13\3\1\0\5\3\7\0"+
    "\2\3\1\0\11\3\2\0\3\3\1\u021b\7\3\1\0"+
    "\5\3\17\0\1\u021c\35\0\2\3\1\0\11\3\2\0"+
    "\5\3\1\u021d\5\3\1\0\5\3\7\0\2\3\1\0"+
    "\11\3\2\0\11\3\1\u021e\1\3\1\0\5\3\7\0"+
    "\2\3\1\0\4\3\1\u021f\4\3\2\0\13\3\1\0"+
    "\5\3\7\0\2\3\1\0\11\3\2\0\2\3\1\u0220"+
    "\10\3\1\0\5\3\7\0\2\3\1\0\5\3\1\u0221"+
    "\3\3\2\0\13\3\1\0\5\3\7\0\2\3\1\0"+
    "\11\3\2\0\3\3\1\u0222\7\3\1\0\5\3\7\0"+
    "\2\3\1\0\11\3\2\0\5\3\1\u0223\5\3\1\0"+
    "\5\3\7\0\2\3\1\0\11\3\2\0\5\3\1\u0224"+
    "\5\3\1\0\5\3\7\0\2\3\1\0\11\3\2\0"+
    "\5\3\1\u0225\5\3\1\0\5\3\7\0\2\3\1\0"+
    "\11\3\2\0\4\3\1\u0226\6\3\1\0\5\3\7\0"+
    "\2\3\1\0\11\3\2\0\3\3\1\u0227\7\3\1\0"+
    "\5\3\7\0\2\3\1\0\11\3\2\0\4\3\1\u0228"+
    "\6\3\1\0\5\3\7\0\2\3\1\0\11\3\2\0"+
    "\11\3\1\u0229\1\3\1\0\5\3\7\0\2\3\1\0"+
    "\11\3\2\0\5\3\1\u022a\5\3\1\0\5\3\7\0"+
    "\2\3\1\0\11\3\2\0\1\3\1\u022b\11\3\1\0"+
    "\5\3\7\0\2\3\1\0\5\3\1\u022c\3\3\2\0"+
    "\13\3\1\0\5\3\7\0\2\3\1\0\11\3\2\0"+
    "\3\3\1\u022d\7\3\1\0\5\3\7\0\2\3\1\0"+
    "\11\3\2\0\2\3\1\u022e\10\3\1\0\5\3\7\0"+
    "\2\3\1\0\11\3\2\0\2\3\1\u022f\10\3\1\0"+
    "\5\3\7\0\2\3\1\0\2\3\1\u0230\6\3\2\0"+
    "\13\3\1\0\5\3\7\0\2\3\1\0\11\3\2\0"+
    "\4\3\1\u0231\6\3\1\0\3\3\1\u0232\1\3\7\0"+
    "\2\3\1\0\11\3\2\0\3\3\1\u0233\7\3\1\0"+
    "\5\3\7\0\2\3\1\0\11\3\2\0\5\3\1\u0234"+
    "\5\3\1\0\5\3\7\0\2\3\1\0\11\3\2\0"+
    "\5\3\1\u0235\5\3\1\0\5\3\7\0\2\3\1\0"+
    "\11\3\2\0\5\3\1\u0236\5\3\1\0\5\3\7\0"+
    "\2\3\1\0\5\3\1\u0237\3\3\2\0\5\3\1\u0238"+
    "\5\3\1\0\5\3\7\0\2\3\1\0\2\3\1\u0239"+
    "\6\3\2\0\13\3\1\0\5\3\7\0\2\3\1\0"+
    "\6\3\1\u023a\2\3\2\0\13\3\1\0\5\3\7\0"+
    "\2\3\1\0\11\3\2\0\13\3\1\0\1\u023b\4\3"+
    "\7\0\2\3\1\0\2\3\1\u023c\6\3\2\0\13\3"+
    "\1\0\5\3\7\0\2\3\1\0\11\3\2\0\3\3"+
    "\1\u023d\7\3\1\0\5\3\7\0\2\3\1\0\11\3"+
    "\2\0\4\3\1\u023e\6\3\1\0\5\3\7\0\2\3"+
    "\1\0\11\3\2\0\13\3\1\0\1\u023f\4\3\12\0"+
    "\1\u0240\42\0\2\3\1\0\2\3\1\u0241\6\3\2\0"+
    "\13\3\1\0\5\3\7\0\2\3\1\0\11\3\2\0"+
    "\11\3\1\u0242\1\3\1\0\5\3\7\0\2\3\1\0"+
    "\11\3\2\0\3\3\1\u0243\7\3\1\0\5\3\7\0"+
    "\2\3\1\0\1\3\1\u0244\7\3\2\0\13\3\1\0"+
    "\5\3\7\0\2\3\1\0\6\3\1\u0245\2\3\2\0"+
    "\13\3\1\0\5\3\7\0\2\3\1\0\11\3\2\0"+
    "\3\3\1\u0246\7\3\1\0\5\3\7\0\2\3\1\0"+
    "\11\3\2\0\3\3\1\u0247\7\3\1\0\5\3\7\0"+
    "\2\3\1\0\1\u0248\10\3\2\0\1\u0249\12\3\1\0"+
    "\5\3\7\0\2\3\1\0\1\u024a\1\3\1\u024b\1\3"+
    "\1\u024c\4\3\2\0\13\3\1\0\5\3\7\0\2\3"+
    "\1\0\11\3\2\0\1\u024d\12\3\1\0\5\3\7\0"+
    "\2\3\1\0\11\3\2\0\2\3\1\u024e\1\u024f\7\3"+
    "\1\0\5\3\7\0\2\3\1\0\4\3\1\u0250\4\3"+
    "\2\0\13\3\1\0\5\3\7\0\2\3\1\0\1\3"+
    "\1\u0251\7\3\2\0\5\3\1\u0252\5\3\1\0\5\3"+
    "\7\0\2\3\1\0\11\3\2\0\11\3\1\u0253\1\3"+
    "\1\0\5\3\7\0\2\3\1\0\11\3\2\0\5\3"+
    "\1\u0254\5\3\1\0\5\3\7\0\2\3\1\0\11\3"+
    "\2\0\3\3\1\u0255\7\3\1\0\5\3\7\0\2\3"+
    "\1\0\4\3\1\u0256\4\3\2\0\13\3\1\0\5\3"+
    "\7\0\2\3\1\0\11\3\2\0\3\3\1\u0257\7\3"+
    "\1\0\5\3\7\0\2\3\1\0\4\3\1\u0258\4\3"+
    "\2\0\13\3\1\0\5\3\7\0\2\3\1\0\6\3"+
    "\1\u0259\2\3\2\0\13\3\1\0\5\3\7\0\2\3"+
    "\1\0\1\3\1\u025a\7\3\2\0\13\3\1\0\5\3"+
    "\7\0\2\3\1\0\1\u025b\10\3\2\0\13\3\1\0"+
    "\5\3\7\0\2\3\1\0\11\3\2\0\5\3\1\u025c"+
    "\5\3\1\0\5\3\7\0\2\3\1\0\2\3\1\u025d"+
    "\6\3\2\0\5\3\1\u025e\5\3\1\0\5\3\7\0"+
    "\2\3\1\0\4\3\1\u025f\4\3\2\0\13\3\1\0"+
    "\5\3\7\0\2\3\1\0\1\u0260\10\3\2\0\13\3"+
    "\1\0\5\3\7\0\2\3\1\0\11\3\2\0\5\3"+
    "\1\u0261\5\3\1\0\5\3\7\0\2\3\1\0\11\3"+
    "\2\0\5\3\1\u0262\5\3\1\0\5\3\7\0\2\3"+
    "\1\0\4\3\1\u0263\4\3\2\0\13\3\1\0\5\3"+
    "\7\0\2\3\1\0\11\3\2\0\3\3\1\u0264\7\3"+
    "\1\0\5\3\7\0\2\3\1\0\11\3\2\0\2\3"+
    "\1\u0265\10\3\1\0\5\3\7\0\2\3\1\0\4\3"+
    "\1\u0266\4\3\2\0\13\3\1\0\5\3\7\0\2\3"+
    "\1\0\11\3\2\0\2\3\1\u0267\10\3\1\0\5\3"+
    "\7\0\2\3\1\0\11\3\2\0\5\3\1\u0268\5\3"+
    "\1\0\5\3\7\0\2\3\1\0\1\3\1\u0269\7\3"+
    "\2\0\13\3\1\0\5\3\7\0\2\3\1\0\6\3"+
    "\1\u026a\2\3\2\0\13\3\1\0\5\3\7\0\2\3"+
    "\1\0\11\3\2\0\4\3\1\u026b\6\3\1\0\5\3"+
    "\7\0\2\3\1\0\11\3\2\0\5\3\1\u026c\5\3"+
    "\1\0\5\3\7\0\2\3\1\0\11\3\2\0\11\3"+
    "\1\u026d\1\3\1\0\5\3\7\0\2\3\1\0\6\3"+
    "\1\u026e\2\3\2\0\13\3\1\0\5\3\7\0\2\3"+
    "\1\0\11\3\2\0\5\3\1\u026f\5\3\1\0\5\3"+
    "\7\0\2\3\1\0\11\3\2\0\5\3\1\u0270\5\3"+
    "\1\0\5\3\7\0\2\3\1\0\4\3\1\u0271\4\3"+
    "\2\0\13\3\1\0\5\3\7\0\2\3\1\0\11\3"+
    "\2\0\2\3\1\u0272\10\3\1\0\5\3\7\0\2\3"+
    "\1\0\4\3\1\u0273\4\3\2\0\13\3\1\0\5\3"+
    "\7\0\2\3\1\0\11\3\2\0\2\3\1\u0274\10\3"+
    "\1\0\5\3\7\0\2\3\1\0\11\3\2\0\10\3"+
    "\1\u0275\2\3\1\0\5\3\7\0\2\3\1\0\4\3"+
    "\1\u0276\4\3\2\0\13\3\1\0\5\3\7\0\2\3"+
    "\1\0\11\3\2\0\3\3\1\u0277\7\3\1\0\5\3"+
    "\7\0\2\3\1\0\11\3\2\0\6\3\1\u0278\4\3"+
    "\1\0\5\3\7\0\2\3\1\0\4\3\1\u0279\4\3"+
    "\2\0\13\3\1\0\5\3\7\0\2\3\1\0\1\3"+
    "\1\u027a\1\3\1\u027b\5\3\2\0\13\3\1\0\5\3"+
    "\7\0\2\3\1\0\1\u027c\10\3\2\0\13\3\1\0"+
    "\5\3\7\0\2\3\1\0\11\3\2\0\5\3\1\u027d"+
    "\3\3\1\u027e\1\3\1\0\5\3\7\0\2\3\1\0"+
    "\11\3\2\0\5\3\1\u027f\5\3\1\0\5\3\7\0"+
    "\2\3\1\0\1\3\1\u0280\7\3\2\0\13\3\1\0"+
    "\5\3\32\0\1\u0281\22\0\2\3\1\0\1\3\1\u0282"+
    "\7\3\2\0\13\3\1\0\5\3\7\0\2\3\1\0"+
    "\11\3\2\0\5\3\1\u0283\5\3\1\0\5\3\7\0"+
    "\2\3\1\0\11\3\2\0\5\3\1\u0284\5\3\1\0"+
    "\5\3\7\0\2\3\1\0\11\3\2\0\5\3\1\u0285"+
    "\5\3\1\0\5\3\7\0\2\3\1\0\4\3\1\u0286"+
    "\4\3\2\0\13\3\1\0\5\3\7\0\2\3\1\0"+
    "\11\3\2\0\5\3\1\u0287\5\3\1\0\5\3\7\0"+
    "\2\3\1\0\11\3\2\0\5\3\1\u0288\5\3\1\0"+
    "\5\3\7\0\2\3\1\0\11\3\2\0\3\3\1\u0289"+
    "\7\3\1\0\5\3\7\0\2\3\1\0\11\3\2\0"+
    "\2\3\1\u028a\10\3\1\0\5\3\7\0\2\3\1\0"+
    "\4\3\1\u028b\4\3\2\0\13\3\1\0\5\3\7\0"+
    "\2\3\1\0\11\3\2\0\5\3\1\u028c\5\3\1\0"+
    "\5\3\7\0\2\3\1\0\11\3\2\0\3\3\1\u028d"+
    "\7\3\1\0\5\3\7\0\2\3\1\0\6\3\1\u028e"+
    "\2\3\2\0\13\3\1\0\5\3\27\0\1\u028f\25\0"+
    "\2\3\1\0\11\3\2\0\3\3\1\u0290\7\3\1\0"+
    "\5\3\7\0\2\3\1\0\11\3\2\0\11\3\1\u0291"+
    "\1\3\1\0\5\3\7\0\2\3\1\0\1\u0292\10\3"+
    "\2\0\13\3\1\0\5\3\7\0\2\3\1\0\4\3"+
    "\1\u0293\4\3\2\0\13\3\1\0\5\3\7\0\2\3"+
    "\1\0\11\3\2\0\5\3\1\u0294\5\3\1\0\5\3"+
    "\7\0\2\3\1\0\11\3\2\0\5\3\1\u0295\5\3"+
    "\1\0\5\3\7\0\2\3\1\0\11\3\2\0\5\3"+
    "\1\u0296\5\3\1\0\5\3\7\0\2\3\1\0\1\u0297"+
    "\10\3\2\0\13\3\1\0\5\3\7\0\2\3\1\0"+
    "\11\3\2\0\1\u0298\12\3\1\0\5\3\7\0\2\3"+
    "\1\0\4\3\1\u0299\4\3\2\0\13\3\1\0\5\3"+
    "\7\0\2\3\1\0\2\3\1\u029a\6\3\2\0\13\3"+
    "\1\0\5\3\7\0\2\3\1\0\1\u029b\10\3\2\0"+
    "\13\3\1\0\5\3\7\0\2\3\1\0\4\3\1\u029c"+
    "\4\3\2\0\13\3\1\0\5\3\7\0\2\3\1\0"+
    "\1\3\1\u029d\7\3\2\0\13\3\1\0\5\3\7\0"+
    "\2\3\1\0\11\3\2\0\3\3\1\u029e\7\3\1\0"+
    "\5\3\7\0\2\3\1\0\1\3\1\u029f\7\3\2\0"+
    "\13\3\1\0\5\3\7\0\2\3\1\0\1\u02a0\10\3"+
    "\2\0\13\3\1\0\5\3\7\0\2\3\1\0\11\3"+
    "\2\0\7\3\1\u02a1\3\3\1\0\5\3\7\0\2\3"+
    "\1\0\1\3\1\u02a2\7\3\2\0\13\3\1\0\5\3"+
    "\7\0\2\3\1\0\11\3\2\0\3\3\1\u02a3\7\3"+
    "\1\0\5\3\27\0\1\u02a4\25\0\2\3\1\0\4\3"+
    "\1\u02a5\4\3\2\0\13\3\1\0\5\3\7\0\2\3"+
    "\1\0\11\3\2\0\1\u02a6\12\3\1\0\5\3\7\0"+
    "\2\3\1\0\11\3\2\0\6\3\1\u02a7\4\3\1\0"+
    "\5\3\7\0\2\3\1\0\4\3\1\u02a8\4\3\2\0"+
    "\13\3\1\0\5\3\7\0\2\3\1\0\4\3\1\u02a9"+
    "\4\3\2\0\13\3\1\0\5\3\7\0\2\3\1\0"+
    "\11\3\2\0\5\3\1\u02aa\5\3\1\0\5\3\7\0"+
    "\2\3\1\0\5\3\1\u02ab\3\3\2\0\13\3\1\0"+
    "\5\3\7\0\2\3\1\0\2\3\1\u02ac\6\3\2\0"+
    "\13\3\1\0\5\3\7\0\2\3\1\0\11\3\2\0"+
    "\3\3\1\u02ad\7\3\1\0\5\3\7\0\2\3\1\0"+
    "\2\3\1\u02ae\6\3\2\0\13\3\1\0\5\3\7\0"+
    "\2\3\1\0\2\3\1\u02af\6\3\2\0\13\3\1\0"+
    "\5\3\7\0\2\3\1\0\11\3\2\0\3\3\1\u02b0"+
    "\7\3\1\0\5\3\7\0\2\3\1\0\1\u02b1\10\3"+
    "\2\0\13\3\1\0\5\3\7\0\2\3\1\0\10\3"+
    "\1\u02b2\2\0\13\3\1\0\5\3\7\0\2\3\1\0"+
    "\4\3\1\u02b3\4\3\2\0\13\3\1\0\5\3\7\0"+
    "\2\3\1\0\11\3\2\0\1\3\1\u02b4\11\3\1\0"+
    "\5\3\7\0\2\3\1\0\11\3\2\0\3\3\1\u02b5"+
    "\7\3\1\0\5\3\7\0\2\3\1\0\11\3\2\0"+
    "\2\3\1\u02b6\10\3\1\0\5\3\7\0\2\3\1\0"+
    "\11\3\2\0\3\3\1\u02b7\7\3\1\0\5\3\7\0"+
    "\2\3\1\0\11\3\2\0\11\3\1\u02b8\1\3\1\0"+
    "\5\3\7\0\2\3\1\0\11\3\2\0\4\3\1\u02b9"+
    "\6\3\1\0\5\3\7\0\2\3\1\0\11\3\2\0"+
    "\3\3\1\u02ba\7\3\1\0\5\3\7\0\2\3\1\0"+
    "\11\3\2\0\2\3\1\u02bb\10\3\1\0\5\3\7\0"+
    "\2\3\1\0\11\3\2\0\5\3\1\u02bc\5\3\1\0"+
    "\5\3\7\0\2\3\1\0\11\3\2\0\5\3\1\u02bd"+
    "\5\3\1\0\5\3\7\0\2\3\1\0\11\3\2\0"+
    "\5\3\1\u02be\5\3\1\0\5\3\7\0\2\3\1\0"+
    "\11\3\2\0\5\3\1\u02bf\5\3\1\0\5\3\7\0"+
    "\2\3\1\0\3\3\1\u02c0\5\3\2\0\13\3\1\0"+
    "\5\3\7\0\2\3\1\0\11\3\2\0\5\3\1\u02c1"+
    "\5\3\1\0\5\3\7\0\2\3\1\0\11\3\2\0"+
    "\5\3\1\u02c2\5\3\1\0\5\3\7\0\2\3\1\0"+
    "\11\3\2\0\3\3\1\u02c3\7\3\1\0\5\3\7\0"+
    "\2\3\1\0\1\3\1\u02c4\7\3\2\0\13\3\1\0"+
    "\5\3\7\0\2\3\1\0\11\3\2\0\5\3\1\u02c5"+
    "\5\3\1\0\5\3\7\0\2\3\1\0\11\3\2\0"+
    "\2\3\1\u02c6\10\3\1\0\5\3\7\0\2\3\1\0"+
    "\4\3\1\u02c7\4\3\2\0\13\3\1\0\5\3\7\0"+
    "\2\3\1\0\11\3\2\0\2\3\1\u02c8\10\3\1\0"+
    "\5\3\7\0\2\3\1\0\1\3\1\u02c9\7\3\2\0"+
    "\13\3\1\0\5\3\7\0\2\3\1\0\11\3\2\0"+
    "\1\3\1\u02ca\11\3\1\0\5\3\12\0\1\u02cb\42\0"+
    "\2\3\1\0\11\3\2\0\2\3\1\u02cc\10\3\1\0"+
    "\5\3\7\0\2\3\1\0\11\3\2\0\11\3\1\u02cd"+
    "\1\3\1\0\5\3\7\0\2\3\1\0\11\3\2\0"+
    "\5\3\1\u02ce\5\3\1\0\5\3\7\0\2\3\1\0"+
    "\1\u02cf\10\3\2\0\13\3\1\0\5\3\7\0\2\3"+
    "\1\0\11\3\2\0\2\3\1\u02d0\10\3\1\0\5\3"+
    "\7\0\2\3\1\0\11\3\2\0\5\3\1\u02d1\5\3"+
    "\1\0\5\3\7\0\2\3\1\0\4\3\1\u02d2\4\3"+
    "\2\0\13\3\1\0\5\3\7\0\2\3\1\0\11\3"+
    "\2\0\3\3\1\u02d3\7\3\1\0\5\3\7\0\2\3"+
    "\1\0\11\3\2\0\2\3\1\u02d4\10\3\1\0\5\3"+
    "\7\0\2\3\1\0\11\3\2\0\5\3\1\u02d5\5\3"+
    "\1\0\5\3\7\0\2\3\1\0\5\3\1\u02d6\3\3"+
    "\2\0\13\3\1\0\5\3\7\0\2\3\1\0\11\3"+
    "\2\0\11\3\1\u02d7\1\3\1\0\5\3\7\0\2\3"+
    "\1\0\6\3\1\u02d8\2\3\2\0\13\3\1\0\5\3"+
    "\7\0\2\3\1\0\11\3\2\0\2\3\1\u02d9\10\3"+
    "\1\0\5\3\7\0\2\3\1\0\2\3\1\u02da\6\3"+
    "\2\0\13\3\1\0\5\3\7\0\2\3\1\0\11\3"+
    "\2\0\3\3\1\u02db\7\3\1\0\5\3\7\0\2\3"+
    "\1\0\11\3\2\0\11\3\1\u02dc\1\3\1\0\5\3"+
    "\7\0\2\3\1\0\4\3\1\u02dd\4\3\2\0\13\3"+
    "\1\0\5\3\7\0\2\3\1\0\11\3\2\0\2\3"+
    "\1\u02de\10\3\1\0\5\3\7\0\2\3\1\0\1\u02df"+
    "\10\3\2\0\13\3\1\0\5\3\7\0\2\3\1\0"+
    "\11\3\2\0\3\3\1\u02e0\7\3\1\0\5\3\7\0"+
    "\2\3\1\0\2\3\1\u02e1\6\3\2\0\13\3\1\0"+
    "\5\3\7\0\2\3\1\0\11\3\2\0\3\3\1\u02e2"+
    "\7\3\1\0\5\3\7\0\2\3\1\0\11\3\2\0"+
    "\3\3\1\u02e3\7\3\1\0\5\3\7\0\2\3\1\0"+
    "\11\3\2\0\1\3\1\u02e4\11\3\1\0\5\3\7\0"+
    "\2\3\1\0\1\u02e5\10\3\2\0\13\3\1\0\5\3"+
    "\7\0\2\3\1\0\11\3\2\0\2\3\1\u02e6\10\3"+
    "\1\0\5\3\32\0\1\u02e7\22\0\2\3\1\0\11\3"+
    "\2\0\2\3\1\u02e8\10\3\1\0\5\3\7\0\2\3"+
    "\1\0\4\3\1\u02e9\4\3\2\0\13\3\1\0\5\3"+
    "\7\0\2\3\1\0\11\3\2\0\5\3\1\u02ea\5\3"+
    "\1\0\5\3\7\0\2\3\1\0\11\3\2\0\11\3"+
    "\1\u02eb\1\3\1\0\5\3\7\0\2\3\1\0\11\3"+
    "\2\0\2\3\1\u02ec\10\3\1\0\5\3\7\0\2\3"+
    "\1\0\11\3\2\0\5\3\1\u02ed\5\3\1\0\5\3"+
    "\7\0\2\3\1\0\11\3\2\0\3\3\1\u02ee\7\3"+
    "\1\0\5\3\7\0\2\3\1\0\1\3\1\u02ef\7\3"+
    "\2\0\13\3\1\0\5\3\7\0\2\3\1\0\11\3"+
    "\2\0\11\3\1\u02f0\1\3\1\0\5\3\7\0\2\3"+
    "\1\0\11\3\2\0\5\3\1\u02f1\5\3\1\0\5\3"+
    "\7\0\2\3\1\0\11\3\2\0\13\3\1\0\1\u02f2"+
    "\4\3\7\0\2\3\1\0\11\3\2\0\4\3\1\u02f3"+
    "\6\3\1\0\5\3\7\0\2\3\1\0\11\3\2\0"+
    "\5\3\1\u02f4\5\3\1\0\5\3\7\0\2\3\1\0"+
    "\11\3\2\0\5\3\1\u02f5\5\3\1\0\5\3\7\0"+
    "\2\3\1\0\11\3\2\0\13\3\1\0\1\3\1\u02f6"+
    "\3\3\7\0\2\3\1\0\11\3\2\0\2\3\1\u02f7"+
    "\10\3\1\0\5\3\7\0\2\3\1\0\4\3\1\u02f8"+
    "\4\3\2\0\3\3\1\u02f9\7\3\1\0\5\3\7\0"+
    "\2\3\1\0\11\3\2\0\11\3\1\u02fa\1\3\1\0"+
    "\5\3\7\0\2\3\1\0\5\3\1\u02fb\3\3\2\0"+
    "\13\3\1\0\5\3\7\0\2\3\1\0\11\3\2\0"+
    "\11\3\1\u02fc\1\3\1\0\5\3\7\0\2\3\1\0"+
    "\5\3\1\u02fd\3\3\2\0\13\3\1\0\5\3\7\0"+
    "\2\3\1\0\11\3\2\0\7\3\1\u02fe\3\3\1\0"+
    "\5\3\7\0\2\3\1\0\11\3\2\0\3\3\1\u02ff"+
    "\7\3\1\0\5\3\7\0\2\3\1\0\11\3\2\0"+
    "\3\3\1\u0300\7\3\1\0\5\3\7\0\2\3\1\0"+
    "\1\u0301\10\3\2\0\13\3\1\0\5\3\7\0\2\3"+
    "\1\0\11\3\2\0\5\3\1\u0302\5\3\1\0\5\3"+
    "\7\0\2\3\1\0\11\3\2\0\5\3\1\u0303\5\3"+
    "\1\0\5\3\7\0\2\3\1\0\11\3\2\0\11\3"+
    "\1\u0304\1\3\1\0\5\3\7\0\2\3\1\0\11\3"+
    "\2\0\3\3\1\u0305\7\3\1\0\5\3\7\0\2\3"+
    "\1\0\11\3\2\0\5\3\1\u0306\5\3\1\0\5\3"+
    "\7\0\2\3\1\0\1\3\1\u0307\7\3\2\0\13\3"+
    "\1\0\5\3\7\0\2\3\1\0\6\3\1\u0308\2\3"+
    "\2\0\13\3\1\0\5\3\7\0\2\3\1\0\11\3"+
    "\2\0\4\3\1\u0309\6\3\1\0\5\3\7\0\2\3"+
    "\1\0\11\3\2\0\2\3\1\u030a\10\3\1\0\5\3"+
    "\7\0\2\3\1\0\11\3\2\0\2\3\1\u030b\10\3"+
    "\1\0\5\3\7\0\2\3\1\0\2\3\1\u030c\6\3"+
    "\2\0\13\3\1\0\5\3\7\0\2\3\1\0\11\3"+
    "\2\0\3\3\1\u030d\7\3\1\0\5\3\7\0\2\3"+
    "\1\0\1\3\1\u030e\7\3\2\0\13\3\1\0\5\3"+
    "\7\0\2\3\1\0\1\3\1\u030f\7\3\2\0\13\3"+
    "\1\0\5\3\7\0\2\3\1\0\6\3\1\u0310\2\3"+
    "\2\0\13\3\1\0\5\3\7\0\2\3\1\0\11\3"+
    "\2\0\1\u0311\12\3\1\0\5\3\7\0\2\3\1\0"+
    "\11\3\2\0\5\3\1\u0312\5\3\1\0\5\3\7\0"+
    "\2\3\1\0\11\3\2\0\5\3\1\u0313\5\3\1\0"+
    "\5\3\7\0\2\3\1\0\11\3\2\0\3\3\1\u0314"+
    "\7\3\1\0\5\3\7\0\2\3\1\0\11\3\2\0"+
    "\7\3\1\u0315\3\3\1\0\5\3\7\0\2\3\1\0"+
    "\1\u0316\10\3\2\0\13\3\1\0\5\3\7\0\2\3"+
    "\1\0\1\u0317\10\3\2\0\13\3\1\0\5\3\7\0"+
    "\2\3\1\0\6\3\1\u0318\2\3\2\0\3\3\1\u0319"+
    "\7\3\1\0\5\3\7\0\2\3\1\0\1\u031a\10\3"+
    "\2\0\13\3\1\0\5\3\7\0\2\3\1\0\11\3"+
    "\2\0\13\3\1\0\1\u031b\4\3\7\0\2\3\1\0"+
    "\4\3\1\u031c\4\3\2\0\13\3\1\0\5\3\7\0"+
    "\2\3\1\0\1\3\1\u031d\7\3\2\0\13\3\1\0"+
    "\5\3\7\0\2\3\1\0\11\3\2\0\2\3\1\u031e"+
    "\10\3\1\0\5\3\7\0\2\3\1\0\11\3\2\0"+
    "\5\3\1\u031f\5\3\1\0\5\3\7\0\2\3\1\0"+
    "\11\3\2\0\3\3\1\u0320\7\3\1\0\5\3\7\0"+
    "\2\3\1\0\11\3\2\0\5\3\1\u0321\5\3\1\0"+
    "\5\3\7\0\2\3\1\0\11\3\2\0\2\3\1\u0322"+
    "\10\3\1\0\5\3\13\0\1\u0323\41\0\2\3\1\0"+
    "\11\3\2\0\5\3\1\u0324\5\3\1\0\5\3\7\0"+
    "\2\3\1\0\11\3\2\0\2\3\1\u0325\10\3\1\0"+
    "\5\3\7\0\2\3\1\0\2\3\1\u0326\6\3\2\0"+
    "\13\3\1\0\5\3\7\0\2\3\1\0\11\3\2\0"+
    "\5\3\1\u0327\5\3\1\0\5\3\7\0\2\3\1\0"+
    "\11\3\2\0\2\3\1\u0328\10\3\1\0\5\3\7\0"+
    "\2\3\1\0\1\3\1\u0329\7\3\2\0\13\3\1\0"+
    "\5\3\7\0\2\3\1\0\4\3\1\u032a\4\3\2\0"+
    "\13\3\1\0\5\3\7\0\2\3\1\0\11\3\2\0"+
    "\3\3\1\u032b\7\3\1\0\5\3\7\0\2\3\1\0"+
    "\11\3\2\0\5\3\1\u032c\5\3\1\0\5\3\7\0"+
    "\2\3\1\0\2\3\1\u032d\6\3\2\0\13\3\1\0"+
    "\5\3\7\0\2\3\1\0\11\3\2\0\3\3\1\u032e"+
    "\7\3\1\0\5\3\7\0\2\3\1\0\11\3\2\0"+
    "\11\3\1\u032f\1\3\1\0\5\3\7\0\2\3\1\0"+
    "\11\3\2\0\3\3\1\u0330\7\3\1\0\5\3\7\0"+
    "\2\3\1\0\2\3\1\u0331\6\3\2\0\13\3\1\0"+
    "\5\3\7\0\2\3\1\0\11\3\2\0\1\3\1\u0332"+
    "\11\3\1\0\5\3\7\0\2\3\1\0\11\3\2\0"+
    "\3\3\1\u0333\7\3\1\0\5\3\7\0\2\3\1\0"+
    "\1\3\1\u0334\7\3\2\0\13\3\1\0\5\3\7\0"+
    "\2\3\1\0\1\u0335\10\3\2\0\13\3\1\0\5\3"+
    "\7\0\2\3\1\0\11\3\2\0\3\3\1\u0336\7\3"+
    "\1\0\5\3\7\0\2\3\1\0\6\3\1\u0337\2\3"+
    "\2\0\13\3\1\0\5\3\7\0\2\3\1\0\11\3"+
    "\2\0\2\3\1\u0338\10\3\1\0\5\3\7\0\2\3"+
    "\1\0\4\3\1\u0339\4\3\2\0\13\3\1\0\5\3"+
    "\7\0\2\3\1\0\11\3\2\0\11\3\1\u033a\1\3"+
    "\1\0\5\3\7\0\2\3\1\0\11\3\2\0\5\3"+
    "\1\u033b\5\3\1\0\5\3\7\0\2\3\1\0\11\3"+
    "\2\0\3\3\1\u033c\7\3\1\0\5\3\7\0\2\3"+
    "\1\0\11\3\2\0\5\3\1\u033d\5\3\1\0\5\3"+
    "\7\0\2\3\1\0\11\3\2\0\11\3\1\u033e\1\3"+
    "\1\0\5\3\7\0\2\3\1\0\11\3\2\0\3\3"+
    "\1\u033f\7\3\1\0\5\3\7\0\2\3\1\0\11\3"+
    "\2\0\5\3\1\u0340\5\3\1\0\5\3\7\0\2\3"+
    "\1\0\1\u0341\10\3\2\0\13\3\1\0\5\3\7\0"+
    "\2\3\1\0\11\3\2\0\5\3\1\u0342\5\3\1\0"+
    "\5\3\7\0\2\3\1\0\1\3\1\u0343\7\3\2\0"+
    "\13\3\1\0\5\3\7\0\2\3\1\0\11\3\2\0"+
    "\5\3\1\u0344\5\3\1\0\5\3\7\0\2\3\1\0"+
    "\11\3\2\0\2\3\1\u0345\10\3\1\0\5\3\7\0"+
    "\2\3\1\0\11\3\2\0\3\3\1\u0346\7\3\1\0"+
    "\5\3\7\0\2\3\1\0\11\3\2\0\5\3\1\u0347"+
    "\5\3\1\0\5\3\7\0\2\3\1\0\11\3\2\0"+
    "\2\3\1\u0348\10\3\1\0\5\3\7\0\2\3\1\0"+
    "\1\u0349\10\3\2\0\13\3\1\0\5\3\7\0\2\3"+
    "\1\0\6\3\1\u034a\2\3\2\0\13\3\1\0\5\3"+
    "\7\0\2\3\1\0\2\3\1\u034b\6\3\2\0\13\3"+
    "\1\0\5\3\7\0\2\3\1\0\11\3\2\0\7\3"+
    "\1\u034c\3\3\1\0\5\3\7\0\2\3\1\0\4\3"+
    "\1\u034d\4\3\2\0\13\3\1\0\5\3\7\0\2\3"+
    "\1\0\5\3\1\u034e\3\3\2\0\13\3\1\0\5\3"+
    "\16\0\1\u034f\36\0\2\3\1\0\4\3\1\u0350\4\3"+
    "\2\0\13\3\1\0\5\3\7\0\2\3\1\0\4\3"+
    "\1\u0351\4\3\2\0\13\3\1\0\5\3\7\0\2\3"+
    "\1\0\11\3\2\0\5\3\1\u0352\5\3\1\0\5\3"+
    "\7\0\2\3\1\0\11\3\2\0\5\3\1\u0353\5\3"+
    "\1\0\5\3\7\0\2\3\1\0\4\3\1\u0354\4\3"+
    "\2\0\13\3\1\0\5\3\7\0\2\3\1\0\11\3"+
    "\2\0\2\3\1\u0355\10\3\1\0\5\3\7\0\2\3"+
    "\1\0\11\3\2\0\2\3\1\u0356\10\3\1\0\5\3"+
    "\7\0\2\3\1\0\11\3\2\0\2\3\1\u0357\10\3"+
    "\1\0\5\3\7\0\2\3\1\0\1\u0358\10\3\2\0"+
    "\13\3\1\0\5\3\7\0\2\3\1\0\11\3\2\0"+
    "\5\3\1\u0359\5\3\1\0\5\3\7\0\2\3\1\0"+
    "\11\3\2\0\2\3\1\u035a\10\3\1\0\5\3\7\0"+
    "\2\3\1\0\11\3\2\0\11\3\1\u035b\1\3\1\0"+
    "\5\3\7\0\2\3\1\0\11\3\2\0\5\3\1\u035c"+
    "\5\3\1\0\5\3\7\0\2\3\1\0\1\u035d\10\3"+
    "\2\0\13\3\1\0\5\3\7\0\2\3\1\0\1\3"+
    "\1\u035e\7\3\2\0\13\3\1\0\5\3\7\0\2\3"+
    "\1\0\11\3\2\0\5\3\1\u035f\5\3\1\0\5\3"+
    "\7\0\2\3\1\0\5\3\1\u0360\3\3\2\0\13\3"+
    "\1\0\5\3\7\0\2\3\1\0\11\3\2\0\2\3"+
    "\1\u0361\10\3\1\0\5\3\7\0\2\3\1\0\1\3"+
    "\1\u0362\7\3\2\0\13\3\1\0\5\3\7\0\2\3"+
    "\1\0\11\3\2\0\4\3\1\u0363\6\3\1\0\5\3"+
    "\7\0\2\3\1\0\4\3\1\u0364\4\3\2\0\13\3"+
    "\1\0\5\3\7\0\2\3\1\0\11\3\2\0\11\3"+
    "\1\u0365\1\3\1\0\5\3\7\0\2\3\1\0\11\3"+
    "\2\0\11\3\1\u0366\1\3\1\0\5\3\7\0\2\3"+
    "\1\0\4\3\1\u0367\4\3\2\0\13\3\1\0\5\3"+
    "\7\0\2\3\1\0\11\3\2\0\1\u0368\12\3\1\0"+
    "\5\3\7\0\2\3\1\0\11\3\2\0\1\u0369\12\3"+
    "\1\0\5\3\7\0\2\3\1\0\1\u036a\10\3\2\0"+
    "\13\3\1\0\5\3\7\0\2\3\1\0\11\3\2\0"+
    "\3\3\1\u036b\7\3\1\0\5\3\7\0\2\3\1\0"+
    "\1\3\1\u036c\7\3\2\0\13\3\1\0\5\3\7\0"+
    "\2\3\1\0\11\3\2\0\5\3\1\u036d\5\3\1\0"+
    "\5\3\7\0\2\3\1\0\11\3\2\0\2\3\1\u036e"+
    "\10\3\1\0\5\3\7\0\2\3\1\0\11\3\2\0"+
    "\3\3\1\u036f\7\3\1\0\5\3\7\0\2\3\1\0"+
    "\11\3\2\0\2\3\1\u0370\10\3\1\0\5\3\7\0"+
    "\2\3\1\0\11\3\2\0\2\3\1\u0371\10\3\1\0"+
    "\5\3\7\0\2\3\1\0\11\3\2\0\3\3\1\u0372"+
    "\7\3\1\0\5\3\7\0\2\3\1\0\11\3\2\0"+
    "\5\3\1\u0373\5\3\1\0\5\3\7\0\2\3\1\0"+
    "\11\3\2\0\5\3\1\u0374\5\3\1\0\5\3\7\0"+
    "\2\3\1\0\11\3\2\0\12\3\1\u0375\1\0\5\3"+
    "\7\0\2\3\1\0\6\3\1\u0376\2\3\2\0\13\3"+
    "\1\0\5\3\7\0\2\3\1\0\11\3\2\0\3\3"+
    "\1\u0377\7\3\1\0\5\3\7\0\2\3\1\0\11\3"+
    "\2\0\5\3\1\u0378\5\3\1\0\5\3\7\0\2\3"+
    "\1\0\2\3\1\u0379\6\3\2\0\13\3\1\0\5\3"+
    "\7\0\2\3\1\0\11\3\2\0\1\u037a\12\3\1\0"+
    "\5\3\7\0\2\3\1\0\5\3\1\u037b\3\3\2\0"+
    "\13\3\1\0\5\3\7\0\2\3\1\0\11\3\2\0"+
    "\2\3\1\u037c\10\3\1\0\5\3\7\0\2\3\1\0"+
    "\11\3\2\0\5\3\1\u037d\5\3\1\0\5\3\7\0"+
    "\2\3\1\0\4\3\1\u037e\4\3\2\0\13\3\1\0"+
    "\5\3\7\0\2\3\1\0\1\u037f\10\3\2\0\13\3"+
    "\1\0\5\3\7\0\2\3\1\0\6\3\1\u0380\2\3"+
    "\2\0\13\3\1\0\5\3\7\0\2\3\1\0\11\3"+
    "\2\0\5\3\1\u0381\5\3\1\0\5\3\7\0\2\3"+
    "\1\0\11\3\2\0\1\3\1\u0382\11\3\1\0\5\3"+
    "\7\0\2\3\1\0\11\3\2\0\7\3\1\u0383\3\3"+
    "\1\0\5\3\7\0\2\3\1\0\5\3\1\u0384\3\3"+
    "\2\0\13\3\1\0\5\3\7\0\2\3\1\0\2\3"+
    "\1\u0385\6\3\2\0\13\3\1\0\5\3\7\0\2\3"+
    "\1\0\11\3\2\0\11\3\1\u0386\1\3\1\0\5\3"+
    "\7\0\2\3\1\0\11\3\2\0\5\3\1\u0387\5\3"+
    "\1\0\5\3\7\0\2\3\1\0\11\3\2\0\2\3"+
    "\1\u0388\10\3\1\0\5\3\7\0\2\3\1\0\6\3"+
    "\1\u0389\2\3\2\0\13\3\1\0\5\3\7\0\2\3"+
    "\1\0\2\3\1\u038a\6\3\2\0\13\3\1\0\5\3"+
    "\7\0\2\3\1\0\6\3\1\u038b\2\3\2\0\13\3"+
    "\1\0\5\3\7\0\2\3\1\0\11\3\2\0\5\3"+
    "\1\u038c\5\3\1\0\5\3\7\0\2\3\1\0\1\u038d"+
    "\10\3\2\0\13\3\1\0\5\3\7\0\2\3\1\0"+
    "\6\3\1\u038e\2\3\2\0\13\3\1\0\5\3\7\0"+
    "\2\3\1\0\2\3\1\u038f\6\3\2\0\13\3\1\0"+
    "\5\3\7\0\2\3\1\0\11\3\2\0\5\3\1\u0390"+
    "\5\3\1\0\5\3\7\0\2\3\1\0\11\3\2\0"+
    "\5\3\1\u0391\5\3\1\0\5\3\7\0\2\3\1\0"+
    "\11\3\2\0\2\3\1\u0392\10\3\1\0\5\3\7\0"+
    "\2\3\1\0\11\3\2\0\11\3\1\u0393\1\3\1\0"+
    "\5\3\7\0\2\3\1\0\11\3\2\0\2\3\1\u0394"+
    "\10\3\1\0\5\3\7\0\2\3\1\0\2\3\1\u0395"+
    "\6\3\2\0\13\3\1\0\5\3\7\0\2\3\1\0"+
    "\11\3\2\0\3\3\1\u0396\7\3\1\0\5\3\7\0"+
    "\2\3\1\0\11\3\2\0\5\3\1\u0397\5\3\1\0"+
    "\5\3\7\0\2\3\1\0\11\3\2\0\5\3\1\u0398"+
    "\5\3\1\0\5\3\7\0\2\3\1\0\11\3\2\0"+
    "\2\3\1\u0399\10\3\1\0\5\3\7\0\2\3\1\0"+
    "\5\3\1\u039a\3\3\2\0\13\3\1\0\5\3\7\0"+
    "\2\3\1\0\11\3\2\0\5\3\1\u039b\3\3\1\u039c"+
    "\1\3\1\0\5\3\7\0\2\3\1\0\11\3\2\0"+
    "\2\3\1\u039d\10\3\1\0\5\3\7\0\2\3\1\0"+
    "\1\3\1\u039e\7\3\2\0\13\3\1\0\5\3\7\0"+
    "\2\3\1\0\11\3\2\0\2\3\1\u039f\10\3\1\0"+
    "\5\3\7\0\2\3\1\0\11\3\2\0\3\3\1\u03a0"+
    "\7\3\1\0\5\3\7\0\2\3\1\0\11\3\2\0"+
    "\11\3\1\u03a1\1\3\1\0\5\3\7\0\2\3\1\0"+
    "\11\3\2\0\2\3\1\u03a2\10\3\1\0\5\3\7\0"+
    "\2\3\1\0\11\3\2\0\5\3\1\u03a3\5\3\1\0"+
    "\5\3\7\0\2\3\1\0\11\3\2\0\5\3\1\u03a4"+
    "\5\3\1\0\5\3\7\0\2\3\1\0\11\3\2\0"+
    "\3\3\1\u03a5\7\3\1\0\5\3\7\0\2\3\1\0"+
    "\11\3\2\0\5\3\1\u03a6\5\3\1\0\5\3\7\0"+
    "\2\3\1\0\11\3\2\0\4\3\1\u03a7\6\3\1\0"+
    "\5\3\7\0\2\3\1\0\4\3\1\u03a8\4\3\2\0"+
    "\13\3\1\0\5\3\7\0\2\3\1\0\11\3\2\0"+
    "\2\3\1\u03a9\10\3\1\0\5\3\7\0\2\3\1\0"+
    "\11\3\2\0\1\3\1\u03aa\11\3\1\0\5\3\7\0"+
    "\2\3\1\0\11\3\2\0\5\3\1\u03ab\5\3\1\0"+
    "\5\3\7\0\2\3\1\0\4\3\1\u03ac\4\3\2\0"+
    "\13\3\1\0\5\3\13\0\1\u03ad\41\0\2\3\1\0"+
    "\1\3\1\u03ae\7\3\2\0\13\3\1\0\5\3\7\0"+
    "\2\3\1\0\6\3\1\u03af\2\3\2\0\13\3\1\0"+
    "\5\3\7\0\2\3\1\0\11\3\2\0\12\3\1\u03b0"+
    "\1\0\5\3\7\0\2\3\1\0\11\3\2\0\2\3"+
    "\1\u03b1\10\3\1\0\5\3\7\0\2\3\1\0\11\3"+
    "\2\0\4\3\1\u03b2\6\3\1\0\5\3\7\0\2\3"+
    "\1\0\2\3\1\u03b3\6\3\2\0\13\3\1\0\5\3"+
    "\7\0\2\3\1\0\4\3\1\u03b4\4\3\2\0\13\3"+
    "\1\0\5\3\7\0\2\3\1\0\6\3\1\u03b5\2\3"+
    "\2\0\13\3\1\0\5\3\7\0\2\3\1\0\11\3"+
    "\2\0\13\3\1\0\1\3\1\u03b6\3\3\7\0\2\3"+
    "\1\0\1\u03b7\10\3\2\0\13\3\1\0\5\3\7\0"+
    "\2\3\1\0\11\3\2\0\5\3\1\u03b8\5\3\1\0"+
    "\5\3\7\0\2\3\1\0\11\3\2\0\2\3\1\u03b9"+
    "\10\3\1\0\5\3\7\0\2\3\1\0\1\u03ba\10\3"+
    "\2\0\13\3\1\0\5\3\7\0\2\3\1\0\11\3"+
    "\2\0\5\3\1\u03bb\5\3\1\0\5\3\7\0\2\3"+
    "\1\0\1\u03bc\10\3\2\0\13\3\1\0\5\3\7\0"+
    "\2\3\1\0\1\u03bd\10\3\2\0\13\3\1\0\5\3"+
    "\7\0\2\3\1\0\11\3\2\0\5\3\1\u03be\5\3"+
    "\1\0\5\3\7\0\2\3\1\0\11\3\2\0\5\3"+
    "\1\u03bf\5\3\1\0\5\3\7\0\2\3\1\0\11\3"+
    "\2\0\11\3\1\u03c0\1\3\1\0\5\3\7\0\2\3"+
    "\1\0\11\3\2\0\5\3\1\u03c1\5\3\1\0\5\3"+
    "\7\0\2\3\1\0\6\3\1\u03c2\2\3\2\0\13\3"+
    "\1\0\5\3\7\0\2\3\1\0\2\3\1\u03c3\6\3"+
    "\2\0\13\3\1\0\5\3\7\0\2\3\1\0\11\3"+
    "\2\0\2\3\1\u03c4\10\3\1\0\5\3\7\0\2\3"+
    "\1\0\4\3\1\u03c5\4\3\2\0\13\3\1\0\5\3"+
    "\7\0\2\3\1\0\11\3\2\0\5\3\1\u03c6\5\3"+
    "\1\0\5\3\7\0\2\3\1\0\4\3\1\u03c7\4\3"+
    "\2\0\13\3\1\0\5\3\7\0\2\3\1\0\5\3"+
    "\1\u03c8\3\3\2\0\13\3\1\0\5\3\7\0\2\3"+
    "\1\0\4\3\1\u03c9\4\3\2\0\13\3\1\0\5\3"+
    "\7\0\2\3\1\0\11\3\2\0\5\3\1\u03ca\5\3"+
    "\1\0\5\3\7\0\2\3\1\0\5\3\1\u03cb\3\3"+
    "\2\0\13\3\1\0\5\3\7\0\2\3\1\0\4\3"+
    "\1\u03cc\4\3\2\0\13\3\1\0\5\3\7\0\2\3"+
    "\1\0\11\3\2\0\5\3\1\u03cd\5\3\1\0\5\3"+
    "\7\0\2\3\1\0\11\3\2\0\3\3\1\u03ce\7\3"+
    "\1\0\5\3\7\0\2\3\1\0\11\3\2\0\3\3"+
    "\1\u03cf\7\3\1\0\5\3\7\0\2\3\1\0\11\3"+
    "\2\0\3\3\1\u03d0\7\3\1\0\5\3\7\0\2\3"+
    "\1\0\11\3\2\0\3\3\1\u03d1\7\3\1\0\5\3"+
    "\7\0\2\3\1\0\4\3\1\u03d2\4\3\2\0\13\3"+
    "\1\0\5\3\7\0\2\3\1\0\11\3\2\0\2\3"+
    "\1\u03d3\10\3\1\0\5\3\7\0\2\3\1\0\11\3"+
    "\2\0\5\3\1\u03d4\5\3\1\0\5\3\7\0\2\3"+
    "\1\0\11\3\2\0\2\3\1\u03d5\10\3\1\0\5\3"+
    "\7\0\2\3\1\0\11\3\2\0\3\3\1\u03d6\7\3"+
    "\1\0\5\3\7\0\2\3\1\0\11\3\2\0\2\3"+
    "\1\u03d7\10\3\1\0\5\3\7\0\2\3\1\0\1\u03d8"+
    "\10\3\2\0\13\3\1\0\5\3\7\0\2\3\1\0"+
    "\11\3\2\0\5\3\1\u03d9\5\3\1\0\5\3\7\0"+
    "\2\3\1\0\4\3\1\u03da\4\3\2\0\13\3\1\0"+
    "\5\3\7\0\2\3\1\0\11\3\2\0\2\3\1\u03db"+
    "\10\3\1\0\5\3\7\0\2\3\1\0\11\3\2\0"+
    "\2\3\1\u03dc\10\3\1\0\5\3\7\0\2\3\1\0"+
    "\1\u03dd\10\3\2\0\13\3\1\0\5\3\7\0\2\3"+
    "\1\0\11\3\2\0\5\3\1\u03de\5\3\1\0\5\3"+
    "\7\0\2\3\1\0\11\3\2\0\2\3\1\u03df\10\3"+
    "\1\0\5\3\7\0\2\3\1\0\11\3\2\0\11\3"+
    "\1\u03e0\1\3\1\0\5\3\7\0\2\3\1\0\11\3"+
    "\2\0\3\3\1\u03e1\7\3\1\0\5\3\7\0\2\3"+
    "\1\0\11\3\2\0\5\3\1\u03e2\5\3\1\0\5\3"+
    "\14\0\1\u03e3\40\0\2\3\1\0\2\3\1\u03e4\6\3"+
    "\2\0\13\3\1\0\5\3\7\0\2\3\1\0\11\3"+
    "\2\0\2\3\1\u03e5\10\3\1\0\5\3\7\0\2\3"+
    "\1\0\11\3\2\0\2\3\1\u03e6\10\3\1\0\5\3"+
    "\7\0\2\3\1\0\11\3\2\0\2\3\1\u03e7\10\3"+
    "\1\0\5\3\7\0\2\3\1\0\4\3\1\u03e8\4\3"+
    "\2\0\13\3\1\0\5\3\7\0\2\3\1\0\11\3"+
    "\2\0\2\3\1\u03e9\10\3\1\0\5\3\7\0\2\3"+
    "\1\0\11\3\2\0\3\3\1\u03ea\7\3\1\0\5\3"+
    "\7\0\2\3\1\0\11\3\2\0\11\3\1\u03eb\1\3"+
    "\1\0\5\3\7\0\2\3\1\0\11\3\2\0\11\3"+
    "\1\u03ec\1\3\1\0\5\3\7\0\2\3\1\0\11\3"+
    "\2\0\3\3\1\u03ed\7\3\1\0\5\3\7\0\2\3"+
    "\1\0\11\3\2\0\5\3\1\u03ee\5\3\1\0\5\3"+
    "\7\0\2\3\1\0\11\3\2\0\5\3\1\u03ef\5\3"+
    "\1\0\5\3\7\0\2\3\1\0\4\3\1\u03f0\4\3"+
    "\2\0\13\3\1\0\5\3\7\0\2\3\1\0\11\3"+
    "\2\0\2\3\1\u03f1\10\3\1\0\5\3\7\0\2\3"+
    "\1\0\1\u03f2\10\3\2\0\13\3\1\0\5\3\7\0"+
    "\2\3\1\0\11\3\2\0\2\3\1\u03f3\10\3\1\0"+
    "\5\3\7\0\2\3\1\0\6\3\1\u03f4\2\3\2\0"+
    "\13\3\1\0\5\3\7\0\2\3\1\0\5\3\1\u03f5"+
    "\3\3\2\0\13\3\1\0\5\3\7\0\2\3\1\0"+
    "\4\3\1\u03f6\4\3\2\0\13\3\1\0\5\3\7\0"+
    "\2\3\1\0\11\3\2\0\11\3\1\u03f7\1\3\1\0"+
    "\5\3\7\0\2\3\1\0\11\3\2\0\11\3\1\u03f8"+
    "\1\3\1\0\5\3\7\0\2\3\1\0\11\3\2\0"+
    "\11\3\1\u03f9\1\3\1\0\5\3\7\0\2\3\1\0"+
    "\11\3\2\0\11\3\1\u03fa\1\3\1\0\5\3\7\0"+
    "\2\3\1\0\11\3\2\0\5\3\1\u03fb\5\3\1\0"+
    "\5\3\7\0\2\3\1\0\11\3\2\0\12\3\1\u03fc"+
    "\1\0\5\3\7\0\2\3\1\0\11\3\2\0\5\3"+
    "\1\u03fd\5\3\1\0\5\3\7\0\2\3\1\0\11\3"+
    "\2\0\11\3\1\u03fe\1\3\1\0\5\3\7\0\2\3"+
    "\1\0\11\3\2\0\5\3\1\u03ff\5\3\1\0\5\3"+
    "\7\0\2\3\1\0\11\3\2\0\2\3\1\u0400\10\3"+
    "\1\0\5\3\7\0\2\3\1\0\11\3\2\0\5\3"+
    "\1\u0401\5\3\1\0\5\3\7\0\2\3\1\0\4\3"+
    "\1\u0402\4\3\2\0\13\3\1\0\5\3\27\0\1\u0403"+
    "\25\0\2\3\1\0\11\3\2\0\2\3\1\u0404\10\3"+
    "\1\0\5\3\7\0\2\3\1\0\11\3\2\0\11\3"+
    "\1\u0405\1\3\1\0\5\3\7\0\2\3\1\0\11\3"+
    "\2\0\2\3\1\u0406\10\3\1\0\5\3\7\0\2\3"+
    "\1\0\11\3\2\0\2\3\1\u0407\10\3\1\0\5\3"+
    "\7\0\2\3\1\0\11\3\2\0\5\3\1\u0408\5\3"+
    "\1\0\5\3\7\0\2\3\1\0\11\3\2\0\5\3"+
    "\1\u0409\5\3\1\0\5\3\7\0\2\3\1\0\11\3"+
    "\2\0\4\3\1\u040a\6\3\1\0\5\3\7\0\2\3"+
    "\1\0\11\3\2\0\2\3\1\u040b\10\3\1\0\5\3"+
    "\7\0\2\3\1\0\11\3\2\0\2\3\1\u040c\10\3"+
    "\1\0\5\3\7\0\2\3\1\0\11\3\2\0\2\3"+
    "\1\u040d\10\3\1\0\5\3\7\0\2\3\1\0\11\3"+
    "\2\0\2\3\1\u040e\10\3\1\0\5\3\7\0\2\3"+
    "\1\0\11\3\2\0\2\3\1\u040f\10\3\1\0\5\3"+
    "\7\0\2\3\1\0\11\3\2\0\2\3\1\u0410\10\3"+
    "\1\0\5\3\7\0\2\3\1\0\11\3\2\0\2\3"+
    "\1\u0411\10\3\1\0\5\3\7\0\2\3\1\0\11\3"+
    "\2\0\2\3\1\u0412\10\3\1\0\5\3\7\0\2\3"+
    "\1\0\11\3\2\0\2\3\1\u0413\10\3\1\0\5\3"+
    "\7\0\2\3\1\0\6\3\1\u0414\2\3\2\0\13\3"+
    "\1\0\5\3\7\0\2\3\1\0\11\3\2\0\2\3"+
    "\1\u0415\10\3\1\0\5\3\6\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[31616];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unkown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\0\1\11\31\1\4\11\66\1\1\0\46\1\1\0"+
    "\70\1\1\0\42\1\1\11\1\0\60\1\1\0\26\1"+
    "\1\0\100\1\1\0\42\1\1\0\74\1\1\0\15\1"+
    "\1\0\12\1\1\11\16\1\1\0\60\1\1\0\43\1"+
    "\1\0\100\1\1\11\15\1\1\0\24\1\1\11\46\1"+
    "\1\0\33\1\1\11\73\1\1\11\53\1\1\0\135\1"+
    "\1\0\65\1\1\0\37\1\1\11\22\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[1045];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;

  /* user code: */
    private Symbol symbol(int type, Object value){
        return new Symbol(type, yyline, yycolumn, value);
    }
    private Symbol symbol(int type){
        return new Symbol(type, yyline, yycolumn);
    }




  /**
   * Creates a new scanner
   * There is also a java.io.InputStream version of this constructor.
   *
   * @param   in  the java.io.Reader to read input from.
   */
  LexerCup(java.io.Reader in) {
    this.zzReader = in;
  }

  /**
   * Creates a new scanner.
   * There is also java.io.Reader version of this constructor.
   *
   * @param   in  the java.io.Inputstream to read input from.
   */
  LexerCup(java.io.InputStream in) {
    this(new java.io.InputStreamReader(in));
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzCurrentPos*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
    }

    /* finally: fill the buffer with new input */
    int numRead = zzReader.read(zzBuffer, zzEndRead,
                                            zzBuffer.length-zzEndRead);

    if (numRead > 0) {
      zzEndRead+= numRead;
      return false;
    }
    // unlikely but not impossible: read 0 characters, but not at end of stream    
    if (numRead == 0) {
      int c = zzReader.read();
      if (c == -1) {
        return true;
      } else {
        zzBuffer[zzEndRead++] = (char) c;
        return false;
      }     
    }

	// numRead < 0
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Contains user EOF-code, which will be executed exactly once,
   * when the end of file is reached
   */
  private void zzDoEOF() throws java.io.IOException {
    if (!zzEOFDone) {
      zzEOFDone = true;
      yyclose();
    }
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public java_cup.runtime.Symbol next_token() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      yychar+= zzMarkedPosL-zzStartRead;

      boolean zzR = false;
      for (zzCurrentPosL = zzStartRead; zzCurrentPosL < zzMarkedPosL;
                                                             zzCurrentPosL++) {
        switch (zzBufferL[zzCurrentPosL]) {
        case '\u000B':
        case '\u000C':
        case '\u0085':
        case '\u2028':
        case '\u2029':
          yyline++;
          zzR = false;
          break;
        case '\r':
          yyline++;
          zzR = true;
          break;
        case '\n':
          if (zzR)
            zzR = false;
          else {
            yyline++;
          }
          break;
        default:
          zzR = false;
        }
      }

      if (zzR) {
        // peek one character ahead if it is \n (if we have counted one line too much)
        boolean zzPeek;
        if (zzMarkedPosL < zzEndReadL)
          zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        else if (zzAtEOF)
          zzPeek = false;
        else {
          boolean eof = zzRefill();
          zzEndReadL = zzEndRead;
          zzMarkedPosL = zzMarkedPos;
          zzBufferL = zzBuffer;
          if (eof) 
            zzPeek = false;
          else 
            zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        }
        if (zzPeek) yyline--;
      }
      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL)
            zzInput = zzBufferL[zzCurrentPosL++];
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = zzBufferL[zzCurrentPosL++];
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          int zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
        case 219: 
          { return new Symbol(sym.quisquilloso, yychar, yyline, yytext());
          }
        case 220: break;
        case 45: 
          { return new Symbol(sym.hacer, yychar, yyline, yytext());
          }
        case 221: break;
        case 124: 
          { return new Symbol(sym.liderar, yychar, yyline, yytext());
          }
        case 222: break;
        case 208: 
          { return new Symbol(sym.confundido, yychar, yyline, yytext());
          }
        case 223: break;
        case 71: 
          { return new Symbol(sym.poner, yychar, yyline, yytext());
          }
        case 224: break;
        case 152: 
          { return new Symbol(sym.irritado, yychar, yyline, yytext());
          }
        case 225: break;
        case 114: 
          { return new Symbol(sym.pensar, yychar, yyline, yytext());
          }
        case 226: break;
        case 212: 
          { return new Symbol(sym.desafilado, yychar, yyline, yytext());
          }
        case 227: break;
        case 168: 
          { return new Symbol(sym.aprender, yychar, yyline, yytext());
          }
        case 228: break;
        case 48: 
          { return new Symbol(sym.abril, yychar, yyline, yytext());
          }
        case 229: break;
        case 135: 
          { return new Symbol(sym.ajustar, yychar, yyline, yytext());
          }
        case 230: break;
        case 43: 
          { //return new Symbol(sym.while, yychar, yyline, yytext());
          }
        case 231: break;
        case 150: 
          { return new Symbol(sym.intentar, yychar, yyline, yytext());
          }
        case 232: break;
        case 34: 
          { return new Symbol(sym.feliz, yychar, yyline, yytext());
          }
        case 233: break;
        case 29: 
          { return new Symbol(sym.terco, yychar, yyline, yytext());
          }
        case 234: break;
        case 81: 
          { return new Symbol(sym.llamar, yychar, yyline, yytext());
          }
        case 235: break;
        case 159: 
          { return new Symbol(sym.escuchar, yychar, yyline, yytext());
          }
        case 236: break;
        case 111: 
          { return new Symbol(sym.gastar, yychar, yyline, yytext());
          }
        case 237: break;
        case 198: 
          { return new Symbol(sym.diciembre, yychar, yyline, yytext());
          }
        case 238: break;
        case 172: 
          { return new Symbol(sym.cancelar, yychar, yyline, yytext());
          }
        case 239: break;
        case 166: 
          { return new Symbol(sym.aburrido, yychar, yyline, yytext());
          }
        case 240: break;
        case 67: 
          { return new Symbol(sym.volar, yychar, yyline, yytext());
          }
        case 241: break;
        case 142: 
          { return new Symbol(sym.molesto, yychar, yyline, yytext());
          }
        case 242: break;
        case 128: 
          { return new Symbol(sym.olvidar, yychar, yyline, yytext());
          }
        case 243: break;
        case 13: 
          { return new Symbol(sym.feo, yychar, yyline, yytext());
          }
        case 244: break;
        case 53: 
          { return new Symbol(sym.creer, yychar, yyline, yytext());
          }
        case 245: break;
        case 112: 
          { return new Symbol(sym.grueso, yychar, yyline, yytext());
          }
        case 246: break;
        case 83: 
          { return new Symbol(sym.semana, yychar, yyline, yytext());
          }
        case 247: break;
        case 145: 
          { return new Symbol(sym.decidir, yychar, yyline, yytext());
          }
        case 248: break;
        case 129: 
          { return new Symbol(sym.octubre, yychar, yyline, yytext());
          }
        case 249: break;
        case 96: 
          { return new Symbol(sym.agosto, yychar, yyline, yytext());
          }
        case 250: break;
        case 46: 
          { return new Symbol(sym.beber, yychar, yyline, yytext());
          }
        case 251: break;
        case 163: 
          { return new Symbol(sym.sediento, yychar, yyline, yytext());
          }
        case 252: break;
        case 22: 
          { return new Symbol(sym.leer, yychar, yyline, yytext());
          }
        case 253: break;
        case 38: 
          { return new Symbol(sym.lunes, yychar, yyline, yytext());
          }
        case 254: break;
        case 203: 
          { return new Symbol(sym.significar, yychar, yyline, yytext());
          }
        case 255: break;
        case 62: 
          { return new Symbol(sym.decir, yychar, yyline, yytext());
          }
        case 256: break;
        case 174: 
          { return new Symbol(sym.reunirse, yychar, yyline, yytext());
          }
        case 257: break;
        case 63: 
          { return new Symbol(sym.dejar, yychar, yyline, yytext());
          }
        case 258: break;
        case 127: 
          { return new Symbol(sym.ofrecer, yychar, yyline, yytext());
          }
        case 259: break;
        case 74: 
          { return new Symbol(sym.tacaño, yychar, yyline, yytext());
          }
        case 260: break;
        case 134: 
          { return new Symbol(sym.aceptar, yychar, yyline, yytext());
          }
        case 261: break;
        case 117: 
          { return new Symbol(sym.incluir, yychar, yyline, yytext());
          }
        case 262: break;
        case 18: 
          { return new Symbol(sym.ver, yychar, yyline, yytext());
          }
        case 263: break;
        case 21: 
          { return new Symbol(sym.liso, yychar, yyline, yytext());
          }
        case 264: break;
        case 97: 
          { return new Symbol(sym.ayudar, yychar, yyline, yytext());
          }
        case 265: break;
        case 8: 
          { //return new Symbol (sym.resta, yychar, yyline, yytext());
          }
        case 266: break;
        case 76: 
          { return new Symbol(sym.fiable, yychar, yyline, yytext());
          }
        case 267: break;
        case 37: 
          { return new Symbol(sym.lejos, yychar, yyline, yytext());
          }
        case 268: break;
        case 54: 
          { return new Symbol(sym.crear, yychar, yyline, yytext());
          }
        case 269: break;
        case 181: 
          { return new Symbol(sym.permitir, yychar, yyline, yytext());
          }
        case 270: break;
        case 91: 
          { return new Symbol(sym.oscuro, yychar, yyline, yytext());
          }
        case 271: break;
        case 184: 
          { return new Symbol(sym.necesitar, yychar, yyline, yytext());
          }
        case 272: break;
        case 194: 
          { return new Symbol(sym.conseguir, yychar, yyline, yytext());
          }
        case 273: break;
        case 183: 
          { return new Symbol(sym.indignado, yychar, yyline, yytext());
          }
        case 274: break;
        case 201: 
          { return new Symbol(sym.encantador, yychar, yyline, yytext());
          }
        case 275: break;
        case 102: 
          { return new Symbol(sym.comodo, yychar, yyline, yytext());
          }
        case 276: break;
        case 52: 
          { return new Symbol(sym.comer, yychar, yyline, yytext());
          }
        case 277: break;
        case 113: 
          { return new Symbol(sym.gruñon, yychar, yyline, yytext());
          }
        case 278: break;
        case 165: 
          { return new Symbol(sym.sociable, yychar, yyline, yytext());
          }
        case 279: break;
        case 1: 
          { return new Symbol(sym.ERROR, yychar, yyline, yytext()) ;
          }
        case 280: break;
        case 3: 
          { return new Symbol (sym.Numero, yychar, yyline, yytext());
          }
        case 281: break;
        case 75: 
          { return new Symbol(sym.triste, yychar, yyline, yytext());
          }
        case 282: break;
        case 211: 
          { return new Symbol(sym.desanimado, yychar, yyline, yytext());
          }
        case 283: break;
        case 51: 
          { return new Symbol(sym.corto, yychar, yyline, yytext());
          }
        case 284: break;
        case 119: 
          { return new Symbol(sym.encajar, yychar, yyline, yytext());
          }
        case 285: break;
        case 20: 
          { //return new Symbol(sym.else, yychar, yyline, yytext();
          }
        case 286: break;
        case 164: 
          { return new Symbol(sym.sostener, yychar, yyline, yytext());
          }
        case 287: break;
        case 173: 
          { return new Symbol(sym.creativo, yychar, yyline, yytext());
          }
        case 288: break;
        case 205: 
          { return new Symbol(sym.soñoliento, yychar, yyline, yytext());
          }
        case 289: break;
        case 86: 
          { return new Symbol(sym.solido, yychar, yyline, yytext());
          }
        case 290: break;
        case 14: 
          { return new Symbol(sym.oir, yychar, yyline, yytext());
          }
        case 291: break;
        case 177: 
          { return new Symbol(sym.mantener, yychar, yyline, yytext());
          }
        case 292: break;
        case 161: 
          { return new Symbol(sym.explicar, yychar, yyline, yytext());
          }
        case 293: break;
        case 180: 
          { return new Symbol(sym.generoso, yychar, yyline, yytext());
          }
        case 294: break;
        case 95: 
          { return new Symbol(sym.añadir, yychar, yyline, yytext());
          }
        case 295: break;
        case 79: 
          { return new Symbol(sym.llenar, yychar, yyline, yytext());
          }
        case 296: break;
        case 80: 
          { return new Symbol(sym.llevar, yychar, yyline, yytext());
          }
        case 297: break;
        case 50: 
          { return new Symbol(sym.cerca, yychar, yyline, yytext());
          }
        case 298: break;
        case 207: 
          { return new Symbol(sym.agradecido, yychar, yyline, yytext());
          }
        case 299: break;
        case 154: 
          { return new Symbol(sym.temprano, yychar, yyline, yytext());
          }
        case 300: break;
        case 10: 
          {// return new Symbol(sym.if, yychar, yyline, yytext());
          }
        case 301: break;
        case 33: 
          { return new Symbol(sym.traer, yychar, yyline, yytext());
          }
        case 302: break;
        case 151: 
          { return new Symbol(sym.inquieto, yychar, yyline, yytext());
          }
        case 303: break;
        case 41: 
          { return new Symbol(sym.sucio, yychar, yyline, yytext());
          }
        case 304: break;
        case 55: 
          { return new Symbol(sym.junio, yychar, yyline, yytext());
          }
        case 305: break;
        case 191: 
          { return new Symbol(sym.arrogante, yychar, yyline, yytext());
          }
        case 306: break;
        case 206: 
          { return new Symbol(sym.hambriento, yychar, yyline, yytext());
          }
        case 307: break;
        case 200: 
          { return new Symbol(sym.trabajador, yychar, yyline, yytext());
          }
        case 308: break;
        case 187: 
          { return new Symbol(sym.encontrar, yychar, yyline, yytext());
          }
        case 309: break;
        case 78: 
          { return new Symbol(sym.ligero, yychar, yyline, yytext());
          }
        case 310: break;
        case 44: 
          { return new Symbol(sym.hueco, yychar, yyline, yytext());
          }
        case 311: break;
        case 131: 
          { return new Symbol(sym.ansioso, yychar, yyline, yytext());
          }
        case 312: break;
        case 115: 
          { return new Symbol(sym.pesado, yychar, yyline, yytext());
          }
        case 313: break;
        case 72: 
          { return new Symbol(sym.parar, yychar, yyline, yytext());
          }
        case 314: break;
        case 68: 
          { return new Symbol(sym.girar, yychar, yyline, yytext());
          }
        case 315: break;
        case 118: 
          { return new Symbol(sym.febrero, yychar, yyline, yytext());
          }
        case 316: break;
        case 101: 
          { //return new Symbol(sym.correr yychar, yyline, yytext());
          }
        case 317: break;
        case 87: 
          { return new Symbol(sym.sabado, yychar, yyline, yytext());
          }
        case 318: break;
        case 156: 
          { return new Symbol(sym.travieso, yychar, yyline, yytext());
          }
        case 319: break;
        case 90: 
          { return new Symbol(sym.bailar, yychar, yyline, yytext());
          }
        case 320: break;
        case 214: 
          { return new Symbol(sym.despiadado, yychar, yyline, yytext());
          }
        case 321: break;
        case 100: 
          { return new Symbol(sym.cortar, yychar, yyline, yytext());
          }
        case 322: break;
        case 178: 
          { return new Symbol(sym.quedarse, yychar, yyline, yytext());
          }
        case 323: break;
        case 32: 
          { return new Symbol(sym.tarde, yychar, yyline, yytext());
          }
        case 324: break;
        case 188: 
          { return new Symbol(sym.orgulloso, yychar, yyline, yytext());
          }
        case 325: break;
        case 36: 
          { return new Symbol(sym.listo, yychar, yyline, yytext());
          }
        case 326: break;
        case 193: 
          { return new Symbol(sym.construir, yychar, yyline, yytext());
          }
        case 327: break;
        case 140: 
          { return new Symbol(sym.cambiar, yychar, yyline, yytext());
          }
        case 328: break;
        case 148: 
          { return new Symbol(sym.golpear, yychar, yyline, yytext());
          }
        case 329: break;
        case 171: 
          { return new Symbol(sym.comenzar, yychar, yyline, yytext());
          }
        case 330: break;
        case 5: 
          { return new Symbol (sym.Division, yychar, yyline, yytext());
          }
        case 331: break;
        case 185: 
          { return new Symbol(sym.noviembre, yychar, yyline, yytext());
          }
        case 332: break;
        case 42: 
          { return new Symbol(sym.saber, yychar, yyline, yytext());
          }
        case 333: break;
        case 15: 
          { return new Symbol(sym.año, yychar, yyline, yytext());
          }
        case 334: break;
        case 19: 
          { return new Symbol(sym.fino, yychar, yyline, yytext());
          }
        case 335: break;
        case 103: 
          { return new Symbol(sym.crecer, yychar, yyline, yytext());
          }
        case 336: break;
        case 70: 
          { return new Symbol(sym.ganar, yychar, yyline, yytext());
          }
        case 337: break;
        case 196: 
          { return new Symbol(sym.minusculo, yychar, yyline, yytext());
          }
        case 338: break;
        case 137: 
          { return new Symbol(sym.cansado, yychar, yyline, yytext());
          }
        case 339: break;
        case 24: 
          { return new Symbol(sym.rico, yychar, yyline, yytext());
          }
        case 340: break;
        case 27: 
          { return new Symbol(sym.duro, yychar, yyline, yytext());
          }
        case 341: break;
        case 210: 
          { return new Symbol(sym.comprender, yychar, yyline, yytext());
          }
        case 342: break;
        case 217: 
          { return new Symbol(sym.avergonzado, yychar, yyline, yytext());
          }
        case 343: break;
        case 88: 
          { return new Symbol(sym.hablar, yychar, yyline, yytext());
          }
        case 344: break;
        case 2: 
          { //return new Symbol (sym.Inexistente, yychar, yyline, yytext());
          }
        case 345: break;
        case 202: 
          { return new Symbol(sym.emocionado, yychar, yyline, yytext());
          }
        case 346: break;
        case 12: 
          { //return new Symbol(sym.int, yychar, yyline, yytext());
          }
        case 347: break;
        case 31: 
          { return new Symbol(sym.tomar, yychar, yyline, yytext());
          }
        case 348: break;
        case 69: 
          { return new Symbol(sym.guapo, yychar, yyline, yytext());
          }
        case 349: break;
        case 186: 
          { return new Symbol(sym.tranquilo, yychar, yyline, yytext());
          }
        case 350: break;
        case 121: 
          { //return new Symbol(sym.esperar, yychar, yyline, yytext());
          }
        case 351: break;
        case 153: 
          { return new Symbol(sym.terminar, yychar, yyline, yytext());
          }
        case 352: break;
        case 110: 
          { return new Symbol(sym.gustar, yychar, yyline, yytext());
          }
        case 353: break;
        case 25: 
          { return new Symbol(sym.rudo, yychar, yyline, yytext());
          }
        case 354: break;
        case 195: 
          { return new Symbol(sym.cauteloso, yychar, yyline, yytext());
          }
        case 355: break;
        case 73: 
          { return new Symbol(sym.pagar, yychar, yyline, yytext());
          }
        case 356: break;
        case 209: 
          { //return new Symbol(sym.considerar, yychar, yyline, yytext());
          }
        case 357: break;
        case 133: 
          { return new Symbol(sym.afilado, yychar, yyline, yytext());
          }
        case 358: break;
        case 92: 
          { return new Symbol(sym.atento, yychar, yyline, yytext());
          }
        case 359: break;
        case 66: 
          { return new Symbol(sym.venir, yychar, yyline, yytext());
          }
        case 360: break;
        case 57: 
          { return new Symbol(sym.jugar, yychar, yyline, yytext());
          }
        case 361: break;
        case 199: 
          { return new Symbol(sym.preguntar, yychar, yyline, yytext());
          }
        case 362: break;
        case 146: 
          { return new Symbol(sym.domingo, yychar, yyline, yytext());
          }
        case 363: break;
        case 82: 
          { return new Symbol(sym.sentir, yychar, yyline, yytext());
          }
        case 364: break;
        case 65: 
          { return new Symbol(sym.vivir, yychar, yyline, yytext());
          }
        case 365: break;
        case 61: 
          { return new Symbol(sym.marzo, yychar, yyline, yytext());
          }
        case 366: break;
        case 99: 
          { return new Symbol(sym.cerrar, yychar, yyline, yytext());
          }
        case 367: break;
        case 155: 
          { return new Symbol(sym.trabajar, yychar, yyline, yytext());
          }
        case 368: break;
        case 39: 
          { return new Symbol(sym.largo, yychar, yyline, yytext());
          }
        case 369: break;
        case 132: 
          { return new Symbol(sym.atrapar, yychar, yyline, yytext());
          }
        case 370: break;
        case 17: 
          { return new Symbol(sym.dar, yychar, yyline, yytext());
          }
        case 371: break;
        case 98: 
          { return new Symbol(sym.celoso, yychar, yyline, yytext());
          }
        case 372: break;
        case 7: 
          { //return new Symbol (sym.suma, yychar, yyline, yytext());
          }
        case 373: break;
        case 58: 
          { return new Symbol(sym.joven, yychar, yyline, yytext());
          }
        case 374: break;
        case 77: 
          { return new Symbol(sym.futbol, yychar, yyline, yytext());
          }
        case 375: break;
        case 190: 
          { return new Symbol(sym.artistico, yychar, yyline, yytext());
          }
        case 376: break;
        case 192: 
          { return new Symbol(sym.ambicioso, yychar, yyline, yytext());
          }
        case 377: break;
        case 122: 
          { return new Symbol(sym.empezar, yychar, yyline, yytext());
          }
        case 378: break;
        case 105: 
          { return new Symbol(sym.jueves, yychar, yyline, yytext());
          }
        case 379: break;
        case 136: 
          { return new Symbol(sym.comprar, yychar, yyline, yytext());
          }
        case 380: break;
        case 179: 
          { return new Symbol(sym.valiente, yychar, yyline, yytext());
          }
        case 381: break;
        case 94: 
          { return new Symbol(sym.aspero, yychar, yyline, yytext());
          }
        case 382: break;
        case 106: 
          { return new Symbol(sym.mimado, yychar, yyline, yytext());
          }
        case 383: break;
        case 189: 
          { return new Symbol(sym.atractivo, yychar, yyline, yytext());
          }
        case 384: break;
        case 169: 
          { return new Symbol(sym.confiado, yychar, yyline, yytext());
          }
        case 385: break;
        case 93: 
          { return new Symbol(sym.alegre, yychar, yyline, yytext());
          }
        case 386: break;
        case 60: 
          { return new Symbol(sym.mover, yychar, yyline, yytext());
          }
        case 387: break;
        case 23: 
          { return new Symbol(sym.amar, yychar, yyline, yytext());
          }
        case 388: break;
        case 104: 
          { return new Symbol(sym.romper, yychar, yyline, yytext());
          }
        case 389: break;
        case 197: 
          { return new Symbol(sym.miercoles, yychar, yyline, yytext());
          }
        case 390: break;
        case 56: 
          { return new Symbol(sym.julio, yychar, yyline, yytext());
          }
        case 391: break;
        case 107: 
          { return new Symbol(sym.mandon, yychar, yyline, yytext());
          }
        case 392: break;
        case 125: 
          { return new Symbol(sym.sincero, yychar, yyline, yytext());
          }
        case 393: break;
        case 218: 
          { return new Symbol(sym.carismatico, yychar, yyline, yytext());
          }
        case 394: break;
        case 130: 
          { return new Symbol(sym.animado, yychar, yyline, yytext());
          }
        case 395: break;
        case 4: 
          { /*Ignore*/
          }
        case 396: break;
        case 138: 
          { return new Symbol(sym.calmado, yychar, yyline, yytext());
          }
        case 397: break;
        case 213: 
          { return new Symbol(sym.despistado, yychar, yyline, yytext());
          }
        case 398: break;
        case 47: 
          { return new Symbol(sym.ancho, yychar, yyline, yytext());
          }
        case 399: break;
        case 35: 
          { return new Symbol(sym.enero, yychar, yyline, yytext());
          }
        case 400: break;
        case 158: 
          { return new Symbol(sym.estupido, yychar, yyline, yytext());
          }
        case 401: break;
        case 144: 
          { return new Symbol(sym.dibujar, yychar, yyline, yytext());
          }
        case 402: break;
        case 9: 
          { //eturn new Symbol (sym.multiplicacion, yychar, yyline, yytext());
          }
        case 403: break;
        case 167: 
          { return new Symbol(sym.amigable, yychar, yyline, yytext());
          }
        case 404: break;
        case 109: 
          { return new Symbol(sym.querer, yychar, yyline, yytext());
          }
        case 405: break;
        case 16: 
          { return new Symbol(sym.mes, yychar, yyline, yytext());
          }
        case 406: break;
        case 147: 
          { return new Symbol(sym.viernes, yychar, yyline, yytext());
          }
        case 407: break;
        case 49: 
          { return new Symbol(sym.abrir, yychar, yyline, yytext());
          }
        case 408: break;
        case 141: 
          { return new Symbol(sym.reparar, yychar, yyline, yytext());
          }
        case 409: break;
        case 28: 
          { return new Symbol(sym.tener, yychar, yyline, yytext());
          }
        case 410: break;
        case 89: 
          { return new Symbol(sym.blanco, yychar, yyline, yytext());
          }
        case 411: break;
        case 149: 
          { return new Symbol(sym.proveer, yychar, yyline, yytext());
          }
        case 412: break;
        case 40: 
          { return new Symbol(sym.suave, yychar, yyline, yytext());
          }
        case 413: break;
        case 30: 
          { return new Symbol(sym.torpe, yychar, yyline, yytext());
          }
        case 414: break;
        case 85: 
          { return new Symbol(sym.seguro, yychar, yyline, yytext());
          }
        case 415: break;
        case 157: 
          { return new Symbol(sym.enfadado, yychar, yyline, yytext());
          }
        case 416: break;
        case 215: 
          { return new Symbol(sym.imaginativo, yychar, yyline, yytext());
          }
        case 417: break;
        case 139: 
          { return new Symbol(sym.caminar, yychar, yyline, yytext());
          }
        case 418: break;
        case 11: 
          { return new Symbol(sym.ir, yychar, yyline, yytext());
          }
        case 419: break;
        case 162: 
          { return new Symbol(sym.sentarse, yychar, yyline, yytext());
          }
        case 420: break;
        case 120: 
          { return new Symbol(sym.escoger, yychar, yyline, yytext());
          }
        case 421: break;
        case 59: 
          { return new Symbol(sym.mirar, yychar, yyline, yytext());
          }
        case 422: break;
        case 160: 
          { return new Symbol(sym.escribir, yychar, yyline, yytext());
          }
        case 423: break;
        case 176: 
          { return new Symbol(sym.radiante, yychar, yyline, yytext());
          }
        case 424: break;
        case 108: 
          { return new Symbol(sym.martes, yychar, yyline, yytext());
          }
        case 425: break;
        case 143: 
          { //return new Symbol(sym.mostrar, yychar, yyline, yytext());
          }
        case 426: break;
        case 182: 
          { return new Symbol(sym.precioso, yychar, yyline, yytext());
          }
        case 427: break;
        case 6: 
          { //return new Symbol (sym.igual, yychar, yyline, yytext());
          }
        case 428: break;
        case 26: 
          { return new Symbol(sym.mayo, yychar, yyline, yytext());
          }
        case 429: break;
        case 170: 
          { return new Symbol(sym.conducir, yychar, yyline, yytext());
          }
        case 430: break;
        case 175: 
          { return new Symbol(sym.recordar, yychar, yyline, yytext());
          }
        case 431: break;
        case 123: 
          { return new Symbol(sym.educado, yychar, yyline, yytext());
          }
        case 432: break;
        case 116: 
          { return new Symbol(sym.perder, yychar, yyline, yytext());
          }
        case 433: break;
        case 216: 
          { return new Symbol(sym.entretenido, yychar, yyline, yytext());
          }
        case 434: break;
        case 84: 
          { return new Symbol(sym.seguir, yychar, yyline, yytext());
          }
        case 435: break;
        case 64: 
          { return new Symbol(sym.dañar, yychar, yyline, yytext());
          }
        case 436: break;
        case 126: 
          { return new Symbol(sym.humilde, yychar, yyline, yytext());
          }
        case 437: break;
        case 204: 
          { return new Symbol(sym.septiembre, yychar, yyline, yytext());
          }
        case 438: break;
        default: 
          if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
            zzAtEOF = true;
            zzDoEOF();
              { return new java_cup.runtime.Symbol(sym.EOF); }
          } 
          else {
            zzScanError(ZZ_NO_MATCH);
          }
      }
    }
  }


}
